<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类:x264 | 懒人李冰]]></title>
  <link href="http://lazybing.github.io/blog/categories/x264/atom.xml" rel="self"/>
  <link href="http://lazybing.github.io/"/>
  <updated>2017-07-11T08:35:30-07:00</updated>
  <id>http://lazybing.github.io/</id>
  <author>
    <name><![CDATA[李冰]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[X264源码解析之x264_dct_init函数]]></title>
    <link href="http://lazybing.github.io/blog/2017/07/10/x264-dct-init/"/>
    <updated>2017-07-10T08:48:23-07:00</updated>
    <id>http://lazybing.github.io/blog/2017/07/10/x264-dct-init</id>
    <content type="html"><![CDATA[
<p>本文主要记录 X264 中对于 DCT 变换的初始化过程。</p>

<!--more-->

<p>DCT 变化理论比较抽象，先从 X264 中代码入手，然后经过 DCT 变换后，比较变换前和变换后的数据，能够更好的理解 DCT 变换。</p>

<p>X264 中对 DCT 各类函数的定义都在<code>common/dct.c</code>里面。其中 sub4x4_dct 定义如下：</p>

<p><figure class='code'><figcaption><span>sub4x4_dct </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kr">inline</span> <span class="kt">void</span> <span class="nf">pixel_sub_wxh</span><span class="p">(</span> <span class="n">dctcoef</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">diff</span><span class="p">,</span> <span class="kt">int</span> <span class="n">i_size</span><span class="p">,</span>
</span><span class='line'>                                  <span class="n">pixel</span> <span class="o">*</span><span class="n">pix1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">i_pix1</span><span class="p">,</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">pix2</span><span class="p">,</span> <span class="kt">int</span> <span class="n">i_pix2</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">y</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">i_size</span><span class="p">;</span> <span class="n">y</span><span class="o">++</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">i_size</span><span class="p">;</span> <span class="n">x</span><span class="o">++</span> <span class="p">)</span>
</span><span class='line'>            <span class="n">diff</span><span class="p">[</span><span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">i_size</span><span class="p">]</span> <span class="o">=</span> <span class="n">pix1</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">-</span> <span class="n">pix2</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
</span><span class='line'>        <span class="n">pix1</span> <span class="o">+=</span> <span class="n">i_pix1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">pix2</span> <span class="o">+=</span> <span class="n">i_pix2</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="kt">void</span> <span class="n">sub4x4_dct</span><span class="p">(</span> <span class="n">dctcoef</span> <span class="n">dct</span><span class="p">[</span><span class="mi">16</span><span class="p">],</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">pix1</span><span class="p">,</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">pix2</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">dctcoef</span> <span class="n">d</span><span class="p">[</span><span class="mi">16</span><span class="p">];</span>
</span><span class='line'>    <span class="n">dctcoef</span> <span class="n">tmp</span><span class="p">[</span><span class="mi">16</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">pixel_sub_wxh</span><span class="p">(</span> <span class="n">d</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">pix1</span><span class="p">,</span> <span class="n">FENC_STRIDE</span><span class="p">,</span> <span class="n">pix2</span><span class="p">,</span> <span class="n">FDEC_STRIDE</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">s03</span> <span class="o">=</span> <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">s12</span> <span class="o">=</span> <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">2</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">d03</span> <span class="o">=</span> <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">d12</span> <span class="o">=</span> <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">2</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">tmp</span><span class="p">[</span><span class="mi">0</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span>   <span class="n">s03</span> <span class="o">+</span>   <span class="n">s12</span><span class="p">;</span>
</span><span class='line'>    <span class="n">tmp</span><span class="p">[</span><span class="mi">1</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2</span><span class="o">*</span><span class="n">d03</span> <span class="o">+</span>   <span class="n">d12</span><span class="p">;</span>
</span><span class='line'>    <span class="n">tmp</span><span class="p">[</span><span class="mi">2</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span>   <span class="n">s03</span> <span class="o">-</span>   <span class="n">s12</span><span class="p">;</span>
</span><span class='line'>    <span class="n">tmp</span><span class="p">[</span><span class="mi">3</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span>   <span class="n">d03</span> <span class="o">-</span> <span class="mi">2</span><span class="o">*</span><span class="n">d12</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">s03</span> <span class="o">=</span> <span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">s12</span> <span class="o">=</span> <span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">2</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">d03</span> <span class="o">=</span> <span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">d12</span> <span class="o">=</span> <span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">2</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">dct</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span>   <span class="n">s03</span> <span class="o">+</span>   <span class="n">s12</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dct</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2</span><span class="o">*</span><span class="n">d03</span> <span class="o">+</span>   <span class="n">d12</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dct</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span>   <span class="n">s03</span> <span class="o">-</span>   <span class="n">s12</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dct</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">+</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span>   <span class="n">d03</span> <span class="o">-</span> <span class="mi">2</span><span class="o">*</span><span class="n">d12</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
</code></pre>

<p>其中的<code>pixel_sub_wxh</code>是获取 pix1 和 pix2 两块数据的残差。这里对 pix1 和 pix2 随意举两个相似的4x4的矩阵作为例子，
之所以要<code>随意</code>是为了突出其普遍性，适用于大多数的 DCT 变换；而<code>相似</code>是因为 pix1 为编码块，pix2 为预测块，它们理论上就应该是相似的。为此举例如下：</p>

<p>$pix1[4x4]=[(23,24,27,29),(24,25,28,28),(26,28,29,29),(26,25,28,30)];$<br />
$pix2[4x4]=[(20,23,27,29),(23,24,26,27),(25,26,25,28),(26,24,28,30)];$</p>

<p>将 pix1 和 pix2 经过<code>pixel_sub_wxh</code>的计算后，得到矩阵d[4x4]为[(3,1,0,0),(1,1,2,1),(1,2,4,1),(0,1,0,0)]。<br />
经第一个for循环后得到tmp[4x4]=[]</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[X264源码解析之x264_pixel_init函数]]></title>
    <link href="http://lazybing.github.io/blog/2017/07/08/x264-pixel-init-function/"/>
    <updated>2017-07-08T22:10:59-07:00</updated>
    <id>http://lazybing.github.io/blog/2017/07/08/x264-pixel-init-function</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#sadsatdssd" id="markdown-toc-sadsatdssd">SAD、SATD、SSD等相关知识介绍</a></li>
  <li><a href="#x264" id="markdown-toc-x264">X264中的函数实现</a></li>
  <li><a href="#define-init2name-name1-name2-cpu--" id="markdown-toc-define-init2name-name1-name2-cpu--">define INIT2_NAME( name1, name2, cpu ) \</a></li>
  <li><a href="#define-initads-cpu--" id="markdown-toc-define-initads-cpu--">define INIT_ADS( cpu ) \</a>    <ul>
      <li><a href="#sad-" id="markdown-toc-sad-">SAD 实现过程</a></li>
    </ul>
  </li>
  <li><a href="#define-pixelsadc-name-lx-ly--" id="markdown-toc-define-pixelsadc-name-lx-ly--">define PIXEL_SAD_C( name, lx, ly ) \</a>    <ul>
      <li><a href="#ssd-" id="markdown-toc-ssd-">SSD 实现过程</a></li>
    </ul>
  </li>
  <li><a href="#define-pixelssdc-name-lx-ly--" id="markdown-toc-define-pixelssdc-name-lx-ly--">define PIXEL_SSD_C( name, lx, ly ) \</a>    <ul>
      <li><a href="#satd-" id="markdown-toc-satd-">SATD 实现过程</a></li>
    </ul>
  </li>
</ul>

<p>本文主要记录<code>x264_pixel_init</code>函数的实现，该函数主要是与像素计算有关的函数，包括SAD、SATD、SSD、SSIM等，它会在打开编码器(x264_encoder_open)时被调用到。<br />
<!--more--></p>

<h2 id="sadsatdssd">SAD、SATD、SSD等相关知识介绍</h2>

<ul>
  <li>SAD(Sum of Absolute Difference)= SAE(Sum of Absolute Error)即绝对误差和</li>
  <li>SATD（Sum of Absolute Transformed Difference）即hadamard变换后再绝对值求和</li>
  <li>SSD（Sum of Squared Difference）=SSE（Sum of Squared Error)即差值的平方和</li>
  <li>MAD（Mean Absolute Difference）=MAE（Mean Absolute Error)即平均绝对差值</li>
  <li>MSD（Mean Squared Difference）=MSE（Mean Squared Error）即平均平方误差</li>
</ul>

<h2 id="x264">X264中的函数实现</h2>

<p><code>x264_pixel_init</code>函数的定义位于 X264 项目中的<code>common/pixel.c</code>文件中。定义如下：</p>

<p><figure class='code'><figcaption><span>x264_pixel_init </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">x264_pixel_init</span><span class="p">(</span> <span class="kt">int</span> <span class="n">cpu</span><span class="p">,</span> <span class="kt">x264_pixel_function_t</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">pixf</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">memset</span><span class="p">(</span> <span class="n">pixf</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">pixf</span><span class="p">)</span> <span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;define-init2name-name1-name2-cpu--&quot;</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">INIT2_NAME</span><span class="p">(</span> <span class="n">name1</span><span class="p">,</span> <span class="n">name2</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> <span class="err">\</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">name1</span><span class="p">[</span><span class="n">PIXEL_16x16</span><span class="p">]</span> <span class="o">=</span> <span class="n">x264_pixel_</span><span class="err">##</span><span class="n">name2</span><span class="err">##</span><span class="n">_16x16</span><span class="err">##</span><span class="n">cpu</span><span class="p">;</span>\
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">name1</span><span class="p">[</span><span class="n">PIXEL_16x8</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_</span><span class="err">##</span><span class="n">name2</span><span class="err">##</span><span class="n">_16x8</span><span class="err">##</span><span class="n">cpu</span><span class="p">;</span> <span class="err">#</span><span class="n">define</span> <span class="n">INIT4_NAME</span><span class="p">(</span> <span class="n">name1</span><span class="p">,</span> <span class="n">name2</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> \
</span><span class='line'><span class="n">INIT2_NAME</span><span class="p">(</span> <span class="n">name1</span><span class="p">,</span> <span class="n">name2</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> \
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">name1</span><span class="p">[</span><span class="n">PIXEL_8x16</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_</span><span class="err">##</span><span class="n">name2</span><span class="err">##</span><span class="n">_8x16</span><span class="err">##</span><span class="n">cpu</span><span class="p">;</span>\
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">name1</span><span class="p">[</span><span class="n">PIXEL_8x8</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_</span><span class="err">##</span><span class="n">name2</span><span class="err">##</span><span class="n">_8x8</span><span class="err">##</span><span class="n">cpu</span><span class="p">;</span> <span class="err">#</span><span class="n">define</span> <span class="n">INIT5_NAME</span><span class="p">(</span> <span class="n">name1</span><span class="p">,</span> <span class="n">name2</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> \
</span><span class='line'><span class="n">INIT4_NAME</span><span class="p">(</span> <span class="n">name1</span><span class="p">,</span> <span class="n">name2</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> \
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">name1</span><span class="p">[</span><span class="n">PIXEL_8x4</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_</span><span class="err">##</span><span class="n">name2</span><span class="err">##</span><span class="n">_8x4</span><span class="err">##</span><span class="n">cpu</span><span class="p">;</span> <span class="err">#</span><span class="n">define</span> <span class="n">INIT6_NAME</span><span class="p">(</span> <span class="n">name1</span><span class="p">,</span> <span class="n">name2</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> \
</span><span class='line'><span class="n">INIT5_NAME</span><span class="p">(</span> <span class="n">name1</span><span class="p">,</span> <span class="n">name2</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> \
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">name1</span><span class="p">[</span><span class="n">PIXEL_4x8</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_</span><span class="err">##</span><span class="n">name2</span><span class="err">##</span><span class="n">_4x8</span><span class="err">##</span><span class="n">cpu</span><span class="p">;</span> <span class="err">#</span><span class="n">define</span> <span class="n">INIT7_NAME</span><span class="p">(</span> <span class="n">name1</span><span class="p">,</span> <span class="n">name2</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> \
</span><span class='line'><span class="n">INIT6_NAME</span><span class="p">(</span> <span class="n">name1</span><span class="p">,</span> <span class="n">name2</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> \
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">name1</span><span class="p">[</span><span class="n">PIXEL_4x4</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_</span><span class="err">##</span><span class="n">name2</span><span class="err">##</span><span class="n">_4x4</span><span class="err">##</span><span class="n">cpu</span><span class="p">;</span> <span class="err">#</span><span class="n">define</span> <span class="n">INIT8_NAME</span><span class="p">(</span> <span class="n">name1</span><span class="p">,</span> <span class="n">name2</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> \
</span><span class='line'><span class="n">INIT7_NAME</span><span class="p">(</span> <span class="n">name1</span><span class="p">,</span> <span class="n">name2</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> \
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">name1</span><span class="p">[</span><span class="n">PIXEL_4x16</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_</span><span class="err">##</span><span class="n">name2</span><span class="err">##</span><span class="n">_4x16</span><span class="err">##</span><span class="n">cpu</span><span class="p">;</span> <span class="err">#</span><span class="n">define</span> <span class="n">INIT2</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> <span class="n">INIT2_NAME</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> <span class="err">#</span><span class="n">define</span> <span class="n">INIT4</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> <span class="n">INIT4_NAME</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> <span class="err">#</span><span class="n">define</span> <span class="n">INIT5</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> <span class="n">INIT5_NAME</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> <span class="err">#</span><span class="n">define</span> <span class="n">INIT6</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> <span class="n">INIT6_NAME</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> <span class="err">#</span><span class="n">define</span> <span class="n">INIT7</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> <span class="n">INIT7_NAME</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> <span class="err">#</span><span class="n">define</span> <span class="n">INIT8</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span> <span class="n">INIT8_NAME</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">cpu</span> <span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;define-initads-cpu--&quot;</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">INIT_ADS</span><span class="p">(</span> <span class="n">cpu</span> <span class="p">)</span> <span class="err">\</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ads</span><span class="p">[</span><span class="n">PIXEL_16x16</span><span class="p">]</span> <span class="o">=</span> <span class="n">x264_pixel_ads4</span><span class="err">##</span><span class="n">cpu</span><span class="p">;</span>\
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ads</span><span class="p">[</span><span class="n">PIXEL_16x8</span><span class="p">]</span> <span class="o">=</span> <span class="n">x264_pixel_ads2</span><span class="err">##</span><span class="n">cpu</span><span class="p">;</span>\
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ads</span><span class="p">[</span><span class="n">PIXEL_8x8</span><span class="p">]</span> <span class="o">=</span> <span class="n">x264_pixel_ads1</span><span class="err">##</span><span class="n">cpu</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">INIT8</span><span class="p">(</span> <span class="n">sad</span><span class="p">,</span> <span class="p">);</span>
</span><span class='line'><span class="n">INIT8_NAME</span><span class="p">(</span> <span class="n">sad_aligned</span><span class="p">,</span> <span class="n">sad</span><span class="p">,</span> <span class="p">);</span>
</span><span class='line'><span class="n">INIT7</span><span class="p">(</span> <span class="n">sad_x3</span><span class="p">,</span> <span class="p">);</span>
</span><span class='line'><span class="n">INIT7</span><span class="p">(</span> <span class="n">sad_x4</span><span class="p">,</span> <span class="p">);</span>
</span><span class='line'><span class="n">INIT8</span><span class="p">(</span> <span class="n">ssd</span><span class="p">,</span> <span class="p">);</span>
</span><span class='line'><span class="n">INIT8</span><span class="p">(</span> <span class="n">satd</span><span class="p">,</span> <span class="p">);</span>
</span><span class='line'><span class="n">INIT7</span><span class="p">(</span> <span class="n">satd_x3</span><span class="p">,</span> <span class="p">);</span>
</span><span class='line'><span class="n">INIT7</span><span class="p">(</span> <span class="n">satd_x4</span><span class="p">,</span> <span class="p">);</span>
</span><span class='line'><span class="n">INIT4</span><span class="p">(</span> <span class="n">hadamard_ac</span><span class="p">,</span> <span class="p">);</span>
</span><span class='line'><span class="n">INIT_ADS</span><span class="p">(</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sa8d</span><span class="p">[</span><span class="n">PIXEL_16x16</span><span class="p">]</span> <span class="o">=</span> <span class="n">x264_pixel_sa8d_16x16</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sa8d</span><span class="p">[</span><span class="n">PIXEL_8x8</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_sa8d_8x8</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">var</span><span class="p">[</span><span class="n">PIXEL_16x16</span><span class="p">]</span> <span class="o">=</span> <span class="n">x264_pixel_var_16x16</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">var</span><span class="p">[</span><span class="n">PIXEL_8x16</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_var_8x16</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">var</span><span class="p">[</span><span class="n">PIXEL_8x8</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_var_8x8</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">var2</span><span class="p">[</span><span class="n">PIXEL_8x16</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_var2_8x16</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">var2</span><span class="p">[</span><span class="n">PIXEL_8x8</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_var2_8x8</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ssd_nv12_core</span> <span class="o">=</span> <span class="n">pixel_ssd_nv12_core</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ssim_4x4x2_core</span> <span class="o">=</span> <span class="n">ssim_4x4x2_core</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ssim_end4</span> <span class="o">=</span> <span class="n">ssim_end4</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">vsad</span> <span class="o">=</span> <span class="n">pixel_vsad</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">asd8</span> <span class="o">=</span> <span class="n">pixel_asd8</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">intra_sad_x3_4x4</span>    <span class="o">=</span> <span class="n">x264_intra_sad_x3_4x4</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">intra_satd_x3_4x4</span>   <span class="o">=</span> <span class="n">x264_intra_satd_x3_4x4</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">intra_sad_x3_8x8</span>    <span class="o">=</span> <span class="n">x264_intra_sad_x3_8x8</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">intra_sa8d_x3_8x8</span>   <span class="o">=</span> <span class="n">x264_intra_sa8d_x3_8x8</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">intra_sad_x3_8x8c</span>   <span class="o">=</span> <span class="n">x264_intra_sad_x3_8x8c</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">intra_satd_x3_8x8c</span>  <span class="o">=</span> <span class="n">x264_intra_satd_x3_8x8c</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">intra_sad_x3_8x16c</span>  <span class="o">=</span> <span class="n">x264_intra_sad_x3_8x16c</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">intra_satd_x3_8x16c</span> <span class="o">=</span> <span class="n">x264_intra_satd_x3_8x16c</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">intra_sad_x3_16x16</span>  <span class="o">=</span> <span class="n">x264_intra_sad_x3_16x16</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">intra_satd_x3_16x16</span> <span class="o">=</span> <span class="n">x264_intra_satd_x3_16x16</span><span class="p">;</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="c1">//后面是与 CPU 有关的函数定义，此处略去 } </span>
</span></code></pre></td></tr></table></div></figure>
</code></pre>

<p>下面分别介绍 SAD、SSD、SATD 的实现过程。</p>

<h3 id="sad-">SAD 实现过程</h3>

<p>将上面代码中的<code>INIT8(sad,)</code>展开，可以得到如下代码：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sad</span><span class="p">[</span><span class="n">PIXEL_16x16</span><span class="p">]</span> <span class="o">=</span> <span class="n">x264_pixel_sad_16x16</span><span class="p">;</span><span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sad</span><span class="p">[</span><span class="n">PIXEL_16x8</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_sad_16x8</span><span class="p">;</span><span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sad</span><span class="p">[</span><span class="n">PIXEL_8x16</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_sad_8x16</span><span class="p">;</span><span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sad</span><span class="p">[</span><span class="n">PIXEL_8x8</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_sad_8x8</span><span class="p">;</span><span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sad</span><span class="p">[</span><span class="n">PIXEL_8x4</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_sad_8x4</span><span class="p">;</span><span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sad</span><span class="p">[</span><span class="n">PIXEL_4x8</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_sad_4x8</span><span class="p">;</span><span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sad</span><span class="p">[</span><span class="n">PIXEL_4x4</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_sad_4x4</span><span class="p">;</span><span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sad</span><span class="p">[</span><span class="n">PIXEL_4x16</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_sad_4x16</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>我们选取其中最简单的<code>x264_pixel_sad_4x4</code>继续展开，它是通过一个宏来定义的：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">PIXEL_SAD_C</span><span class="p">(</span> <span class="n">x264_pixel_sad_4x4</span><span class="p">,</span>    <span class="mi">4</span><span class="p">,</span>  <span class="mi">4</span> <span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;define-pixelsadc-name-lx-ly--&quot;</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">PIXEL_SAD_C</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">lx</span><span class="p">,</span> <span class="n">ly</span> <span class="p">)</span> <span class="err">\</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="kt">int</span> <span class="n">name</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">pix1</span><span class="p">,</span> <span class="kt">intptr_t</span> <span class="n">i_stride_pix1</span><span class="p">,</span>  \
</span><span class='line'>                 <span class="n">pixel</span> <span class="o">*</span><span class="n">pix2</span><span class="p">,</span> <span class="kt">intptr_t</span> <span class="n">i_stride_pix2</span> <span class="p">)</span> \
</span><span class='line'><span class="p">{</span>                                                   \
</span><span class='line'>    <span class="kt">int</span> <span class="n">i_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>                                  \
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">y</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">ly</span><span class="p">;</span> <span class="n">y</span><span class="o">++</span> <span class="p">)</span>                   \
</span><span class='line'>    <span class="p">{</span>                                               \
</span><span class='line'>        <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">lx</span><span class="p">;</span> <span class="n">x</span><span class="o">++</span> <span class="p">)</span>               \
</span><span class='line'>        <span class="p">{</span>                                           \
</span><span class='line'>            <span class="n">i_sum</span> <span class="o">+=</span> <span class="n">abs</span><span class="p">(</span> <span class="n">pix1</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">-</span> <span class="n">pix2</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="p">);</span>      \
</span><span class='line'>        <span class="p">}</span>                                           \
</span><span class='line'>        <span class="n">pix1</span> <span class="o">+=</span> <span class="n">i_stride_pix1</span><span class="p">;</span>                      \
</span><span class='line'>        <span class="n">pix2</span> <span class="o">+=</span> <span class="n">i_stride_pix2</span><span class="p">;</span>                      \
</span><span class='line'>    <span class="p">}</span>                                               \
</span><span class='line'>    <span class="k">return</span> <span class="n">i_sum</span><span class="p">;</span>                                   \
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>展开后，可以得到如下代码：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">int</span> <span class="nf">x264_pixel_sad_4x4</span><span class="p">(</span><span class="n">pixel</span> <span class="o">*</span><span class="n">pix1</span><span class="p">,</span> <span class="kt">intptr_t</span> <span class="n">i_stride_pix1</span><span class="p">,</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">pix2</span><span class="p">,</span> <span class="kt">intptr_t</span> <span class="n">i_stride_pix2</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">y</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">y</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">x</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">i_sum</span> <span class="o">+=</span> <span class="n">abs</span><span class="p">(</span><span class="n">pix1</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">-</span> <span class="n">pix2</span><span class="p">[</span><span class="n">x</span><span class="p">]);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">pix1</span> <span class="o">+=</span> <span class="n">i_stride_pix1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">pix2</span> <span class="o">+=</span> <span class="n">i_stride_pix2</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">i_sum</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="ssd-">SSD 实现过程</h3>

<p>将上面代码中的<code>INIT8(ssd,)</code>展开，可以得到如下代码：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ssd</span><span class="p">[</span><span class="n">PIXEL_16x16</span><span class="p">]</span> <span class="o">=</span> <span class="n">x264_pixel_ssd_16x16</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ssd</span><span class="p">[</span><span class="n">PIXEL_16x8</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_ssd_16x8</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ssd</span><span class="p">[</span><span class="n">PIXEL_8x16</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_ssd_8x16</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ssd</span><span class="p">[</span><span class="n">PIXEL_8x8</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_ssd_8x8</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ssd</span><span class="p">[</span><span class="n">PIXEL_8x4</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_ssd_8x4</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ssd</span><span class="p">[</span><span class="n">PIXEL_4x8</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_ssd_4x8</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ssd</span><span class="p">[</span><span class="n">PIXEL_4x4</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_ssd_4x4</span><span class="p">;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ssd</span><span class="p">[</span><span class="n">PIXEL_4x16</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_ssd_4x16</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">PIXEL_SSD_C</span><span class="p">(</span> <span class="n">x264_pixel_ssd_4x4</span><span class="p">,</span>    <span class="mi">4</span><span class="p">,</span>  <span class="mi">4</span> <span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;define-pixelssdc-name-lx-ly--&quot;</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">PIXEL_SSD_C</span><span class="p">(</span> <span class="n">name</span><span class="p">,</span> <span class="n">lx</span><span class="p">,</span> <span class="n">ly</span> <span class="p">)</span> <span class="err">\</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="kt">int</span> <span class="n">name</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">pix1</span><span class="p">,</span> <span class="kt">intptr_t</span> <span class="n">i_stride_pix1</span><span class="p">,</span>  \
</span><span class='line'>                 <span class="n">pixel</span> <span class="o">*</span><span class="n">pix2</span><span class="p">,</span> <span class="kt">intptr_t</span> <span class="n">i_stride_pix2</span> <span class="p">)</span> \
</span><span class='line'><span class="p">{</span>                                                   \
</span><span class='line'>    <span class="kt">int</span> <span class="n">i_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>                                  \
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">y</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">ly</span><span class="p">;</span> <span class="n">y</span><span class="o">++</span> <span class="p">)</span>                   \
</span><span class='line'>    <span class="p">{</span>                                               \
</span><span class='line'>        <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">lx</span><span class="p">;</span> <span class="n">x</span><span class="o">++</span> <span class="p">)</span>               \
</span><span class='line'>        <span class="p">{</span>                                           \
</span><span class='line'>            <span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">pix1</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">-</span> <span class="n">pix2</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>              \
</span><span class='line'>            <span class="n">i_sum</span> <span class="o">+=</span> <span class="n">d</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">d</span><span class="p">;</span>                           \
</span><span class='line'>        <span class="p">}</span>                                           \
</span><span class='line'>        <span class="n">pix1</span> <span class="o">+=</span> <span class="n">i_stride_pix1</span><span class="p">;</span>                      \
</span><span class='line'>        <span class="n">pix2</span> <span class="o">+=</span> <span class="n">i_stride_pix2</span><span class="p">;</span>                      \
</span><span class='line'>    <span class="p">}</span>                                               \
</span><span class='line'>    <span class="k">return</span> <span class="n">i_sum</span><span class="p">;</span>                                   \
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>此时，可以得到<code>x264_pixel_ssd_4x4</code>的定义如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">int</span> <span class="nf">x264_pixel_ssd_4x4</span><span class="p">(</span><span class="n">pixel</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">pix1</span><span class="p">,</span> <span class="kt">intptr_t</span> <span class="n">i_stride_pix1</span><span class="p">,</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">pix2</span><span class="p">,</span> <span class="kt">intptr_t</span> <span class="n">i_stride_pix2</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span> <span class="n">y</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">y</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">x</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">pix1</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">-</span> <span class="n">pix2</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
</span><span class='line'>            <span class="n">i_sum</span> <span class="o">+=</span> <span class="n">d</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">d</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">pix1</span> <span class="o">+=</span> <span class="n">i_stride_pix1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">pix2</span> <span class="o">+=</span> <span class="n">i_stride_pix2</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">i_sum</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="satd-">SATD 实现过程</h3>

<p>将代码中的<code>INIT8(satd,)</code>展开，可以得到如下代码：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">satd</span><span class="p">[</span><span class="n">PIXEL_16x16</span><span class="p">]</span> <span class="o">=</span> <span class="n">x264_pixel_satd_16x16</span><span class="p">;</span><span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">satd</span><span class="p">[</span><span class="n">PIXEL_16x8</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_satd_16x8</span><span class="p">;</span> <span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">satd</span><span class="p">[</span><span class="n">PIXEL_8x16</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_satd_8x16</span><span class="p">;</span><span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">satd</span><span class="p">[</span><span class="n">PIXEL_8x8</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_satd_8x8</span><span class="p">;</span> <span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">satd</span><span class="p">[</span><span class="n">PIXEL_8x4</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_satd_8x4</span><span class="p">;</span> <span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">satd</span><span class="p">[</span><span class="n">PIXEL_4x8</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_satd_4x8</span><span class="p">;</span> <span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">satd</span><span class="p">[</span><span class="n">PIXEL_4x4</span><span class="p">]</span>   <span class="o">=</span> <span class="n">x264_pixel_satd_4x4</span><span class="p">;</span> <span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="n">pixf</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">satd</span><span class="p">[</span><span class="n">PIXEL_4x16</span><span class="p">]</span>  <span class="o">=</span> <span class="n">x264_pixel_satd_4x16</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>同样，选取最简单的<code>x264_pixel_satd_4x4</code>继续展开，它的定义如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="n">NOINLINE</span> <span class="kt">int</span> <span class="nf">x264_pixel_satd_4x4</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">pix1</span><span class="p">,</span> <span class="kt">intptr_t</span> <span class="n">i_pix1</span><span class="p">,</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">pix2</span><span class="p">,</span> <span class="kt">intptr_t</span> <span class="n">i_pix2</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">sum2_t</span> <span class="n">tmp</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">2</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">sum2_t</span> <span class="n">a0</span><span class="p">,</span> <span class="n">a1</span><span class="p">,</span> <span class="n">a2</span><span class="p">,</span> <span class="n">a3</span><span class="p">,</span> <span class="n">b0</span><span class="p">,</span> <span class="n">b1</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">sum2_t</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">,</span> <span class="n">pix1</span> <span class="o">+=</span> <span class="n">i_pix1</span><span class="p">,</span> <span class="n">pix2</span> <span class="o">+=</span> <span class="n">i_pix2</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">a0</span> <span class="o">=</span> <span class="n">pix1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">pix2</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>        <span class="n">a1</span> <span class="o">=</span> <span class="n">pix1</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">pix2</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>        <span class="n">b0</span> <span class="o">=</span> <span class="p">(</span><span class="n">a0</span><span class="o">+</span><span class="n">a1</span><span class="p">)</span> <span class="o">+</span> <span class="p">((</span><span class="n">a0</span><span class="o">-</span><span class="n">a1</span><span class="p">)</span><span class="err">«</span><span class="n">BITS_PER_SUM</span><span class="p">);</span>
</span><span class='line'>        <span class="n">a2</span> <span class="o">=</span> <span class="n">pix1</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="n">pix2</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
</span><span class='line'>        <span class="n">a3</span> <span class="o">=</span> <span class="n">pix1</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">-</span> <span class="n">pix2</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'>        <span class="n">b1</span> <span class="o">=</span> <span class="p">(</span><span class="n">a2</span><span class="o">+</span><span class="n">a3</span><span class="p">)</span> <span class="o">+</span> <span class="p">((</span><span class="n">a2</span><span class="o">-</span><span class="n">a3</span><span class="p">)</span><span class="err">«</span><span class="n">BITS_PER_SUM</span><span class="p">);</span>
</span><span class='line'>        <span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">b0</span> <span class="o">+</span> <span class="n">b1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">b0</span> <span class="o">-</span> <span class="n">b1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">HADAMARD4</span><span class="p">(</span> <span class="n">a0</span><span class="p">,</span> <span class="n">a1</span><span class="p">,</span> <span class="n">a2</span><span class="p">,</span> <span class="n">a3</span><span class="p">,</span> <span class="n">tmp</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">i</span><span class="p">],</span> <span class="n">tmp</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">],</span> <span class="n">tmp</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="n">i</span><span class="p">],</span> <span class="n">tmp</span><span class="p">[</span><span class="mi">3</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>        <span class="n">a0</span> <span class="o">=</span> <span class="n">abs2</span><span class="p">(</span><span class="n">a0</span><span class="p">)</span> <span class="o">+</span> <span class="n">abs2</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span> <span class="o">+</span> <span class="n">abs2</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span> <span class="o">+</span> <span class="n">abs2</span><span class="p">(</span><span class="n">a3</span><span class="p">);</span>
</span><span class='line'>        <span class="n">sum</span> <span class="o">+=</span> <span class="p">((</span><span class="kt">sum_t</span><span class="p">)</span><span class="n">a0</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">a0</span><span class="err">»</span><span class="n">BITS_PER_SUM</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">sum</span><span class="err"> »</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[X264 源码解析之帧间预测]]></title>
    <link href="http://lazybing.github.io/blog/2017/07/08/x264-inter-prediction/"/>
    <updated>2017-07-08T07:44:15-07:00</updated>
    <id>http://lazybing.github.io/blog/2017/07/08/x264-inter-prediction</id>
    <content type="html"><![CDATA[<p>本文记录 H264 中关于帧间预测的部分，并详细解析它在 x264 中的源码实现。</p>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[X264 源码解析之帧内预测]]></title>
    <link href="http://lazybing.github.io/blog/2017/06/30/x264-intra-prediction/"/>
    <updated>2017-06-30T08:12:22-07:00</updated>
    <id>http://lazybing.github.io/blog/2017/06/30/x264-intra-prediction</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#intra4x4-" id="markdown-toc-intra4x4-">Intra_4x4 预测模式</a>    <ul>
      <li><a href="#intra4x4vertical-" id="markdown-toc-intra4x4vertical-">Intra_4x4_Vertical 预测模式</a></li>
    </ul>
  </li>
  <li><a href="#define-predict4x4dcv" id="markdown-toc-define-predict4x4dcv">define PREDICT_4x4_DC(v)\</a>    <ul>
      <li><a href="#intra4x4horizontal-" id="markdown-toc-intra4x4horizontal-">Intra_4x4_Horizontal 预测模式</a></li>
      <li><a href="#intra4x4dc-" id="markdown-toc-intra4x4dc-">Intra_4x4_DC 预测模式</a></li>
      <li><a href="#intra4x4diagonaldownleft-" id="markdown-toc-intra4x4diagonaldownleft-">Intra_4x4_Diagonal_Down_Left 预测模式</a></li>
    </ul>
  </li>
  <li><a href="#define-predict4x4loadtop" id="markdown-toc-define-predict4x4loadtop">define PREDICT_4x4_LOAD_TOP\</a></li>
  <li><a href="#define-predict4x4loadtopright" id="markdown-toc-define-predict4x4loadtopright">define PREDICT_4x4_LOAD_TOP_RIGHT\</a></li>
  <li><a href="#define-f1ab---ab11" id="markdown-toc-define-f1ab---ab11">define F1(a,b)   (((a)+(b)+1)»1)</a>    <ul>
      <li><a href="#intra4x4diagonaldownright-" id="markdown-toc-intra4x4diagonaldownright-">Intra_4x4_Diagonal_Down_Right 预测模式</a></li>
      <li><a href="#intra4x4verticalright-" id="markdown-toc-intra4x4verticalright-">Intra_4x4_Vertical_Right 预测模式</a></li>
      <li><a href="#intra4x4horizontaldown-" id="markdown-toc-intra4x4horizontaldown-">Intra_4x4_Horizontal_Down 预测模式</a></li>
      <li><a href="#intra4x4verticalleft-" id="markdown-toc-intra4x4verticalleft-">Intra_4x4_Vertical_Left 预测模式</a></li>
      <li><a href="#intra4x4horizontalup-" id="markdown-toc-intra4x4horizontalup-">Intra_4x4_Horizontal_Up 预测模式</a></li>
      <li><a href="#intra8x8-" id="markdown-toc-intra8x8-">Intra_8x8 预测模式</a>        <ul>
          <li><a href="#intra8x8vertical-" id="markdown-toc-intra8x8vertical-">Intra_8x8_Vertical 预测模式</a></li>
          <li><a href="#intra8x8horizontal-" id="markdown-toc-intra8x8horizontal-">Intra_8x8_Horizontal 预测模式</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#define-predict8x8dcv-" id="markdown-toc-define-predict8x8dcv-">define PREDICT_8x8_DC(v) \</a>    <ul>
      <li><a href="#intra8x8dc-" id="markdown-toc-intra8x8dc-">Intra_8x8_DC 预测模式</a></li>
      <li><a href="#intra8x8diagonaldownleft-" id="markdown-toc-intra8x8diagonaldownleft-">Intra_8x8_Diagonal_Down_Left 预测模式</a></li>
      <li><a href="#intra8x8diagonaldownright-" id="markdown-toc-intra8x8diagonaldownright-">Intra_8x8_Diagonal_Down_Right 预测模式</a></li>
      <li><a href="#intra8x8verticalright-" id="markdown-toc-intra8x8verticalright-">Intra_8x8_Vertical_Right 预测模式</a></li>
      <li><a href="#intra8x8horizontaldown-" id="markdown-toc-intra8x8horizontaldown-">Intra_8x8_Horizontal_Down 预测模式</a></li>
      <li><a href="#intra8x8verticalleft-" id="markdown-toc-intra8x8verticalleft-">Intra_8x8_Vertical_Left 预测模式</a></li>
      <li><a href="#intra8x8horizontalup-" id="markdown-toc-intra8x8horizontalup-">Intra_8x8_Horizontal_Up 预测模式</a></li>
      <li><a href="#intra16x16-" id="markdown-toc-intra16x16-">Intra_16x16 预测模式</a>        <ul>
          <li><a href="#intra16x16vertical-" id="markdown-toc-intra16x16vertical-">Intra_16x16_Vertical 预测模式</a></li>
          <li><a href="#intra16x16horizontal-" id="markdown-toc-intra16x16horizontal-">Intra_16x16_Horizontal 预测模式</a></li>
          <li><a href="#intra16x16dc-" id="markdown-toc-intra16x16dc-">Intra_16x16_DC 预测模式</a></li>
          <li><a href="#intra16x16plane-" id="markdown-toc-intra16x16plane-">Intra_16x16_Plane 预测模式</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>本文主要记录 x264 中使用到的帧内预测技术。</p>

<!--more-->

<h2 id="intra4x4-">Intra_4x4 预测模式</h2>

<p>x264 中对 4x4 的预测模式如下：</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Intra4x4PredMode[luma4x4BlkIdx]</th>
      <th style="text-align: center">Name of Intra4x4PredMode[luma4x4BlkIdx]</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">0</td>
      <td style="text-align: center">Intra_4x4_Vertical(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">Intra_4x4_Horizontal(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">Intra_4x4_DC(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">3</td>
      <td style="text-align: center">Intra_4x4_Diagonal_Down_Left(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">Intra_4x4_Diagonal_Down_Right(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">5</td>
      <td style="text-align: center">Intra_4x4_Vertical_Right(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">6</td>
      <td style="text-align: center">Intra_4x4_Horizontal_Down(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">7</td>
      <td style="text-align: center">Intra_4x4_Vertical_Left(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">8</td>
      <td style="text-align: center">Intra_4x4_Horizontal_Up(prediction mode)</td>
    </tr>
  </tbody>
</table>

<p>下面依次分析这几种预测模式：</p>

<h3 id="intra4x4vertical-">Intra_4x4_Vertical 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_4x4 prediction mode is invoked when Intra4x4PredMode[ luma4x4BlkIdx ] is equal to 0.<br/>This mode shall be used only when the samples p[ x, -1 ] with x = 0..3 are marked as “available for Intra_4x4 prediction”.<br/>The values of the prediction samples pred4x4L[ x, y ], with x, y = 0..3, are derived by<br /><br/>$pred4x4_L[x,y]=p[x,-1], with x,y=0..3$</p></blockquote></p>

<p>x264 中关于模式 Intra_4x4_Vertical 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">x264_predict_4x4_v_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_DC</span><span class="p">(</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">#define SRC(x,y) src[(x)+(y)&lt;/em&gt;FDEC_STRIDE]</span>
</span><span class='line'><span class="cp">#define SRC_X4(x,y) MPIXEL_X4( &amp;amp;SRC(x,y) )&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;define-predict4x4dcv&quot;</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">PREDICT_4x4_DC</span><span class="p">(</span><span class="n">v</span><span class="p">)</span><span class="err">\</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="o">=</span> <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="o">=</span> <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">=</span> <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span> <span class="o">=</span> <span class="n">v</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>
</code></pre>

<h3 id="intra4x4horizontal-">Intra_4x4_Horizontal 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_4x4 prediction mode is invoked when Intra4x4PredMode[ luma4x4BlkIdx ] is equal to 1.<br /><br/>This mode shall be used only when the samples p[ −1, y ], with y = 0..3, are marked as “available for Intra_4x4 prediction”.<br/>The values of the prediction samples pred4x4L[ x, y ], with x, y = 0..3, are derived by<br /><br/>$pred4x4_L[x,y]=p[-1, y], with x,y=0..3$</p></blockquote></p>

<p>x264 中关于模式 Intra_4x4_Vertical 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">x264_predict_4x4_h_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="o">=</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="o">=</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">=</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span> <span class="o">=</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra4x4dc-">Intra_4x4_DC 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_4x4 prediction mode is invoked when Intra4x4PredMode[ luma4x4BlkIdx ] is equal to 2.<br/>The values of the prediction samples $pred4x4_L[ x, y ]$, with x, y = 0..3, are derived as follows:</p></p><p><p>If all samples p[ x, −1 ], with x = 0..3, and p[ −1, y ], with y = 0..3, are marked as “available for Intra_4x4 prediction”, the values of the prediction samples $pred4x4_L$[ x, y ], with x, y = 0..3, are derived by<br /><br/>$pred4x4_L[x,y]$ = (p[0,-1]+p[1,-1]+p[2,-1]+p[3,-1]+p[-1,0]+p[-1,1]+p[-1,2]+p[-1,3]+4)»3</p></p><p><p>Otherwise, if any samples p[ x, .1 ], with x = 0..3, are marked as “not available for Intra_4x4 prediction” and all samples p[ .1, y ], with y = 0..3, are marked as “available for Intra_4x4 prediction”, the values of the prediction samples $pred4x4_L$[ x, y ], with x, y = 0..3, are derived by<br /><br/>$pred4x4_L[x,y] = (p[-1,0]+p[-1,1]+p[-1,2]+p[-1,3]+2)»2$</p></p><p><p>Otherwise, if any samples p[ .1, y ], with y = 0..3, are marked as “not available for Intra_4x4 prediction” and all samples p[ x, .1 ], with x = 0 .. 3, are marked as “available for Intra_4x4 prediction”, the values of the prediction samples $pred4x4_L$[ x, y ], with x, y = 0 .. 3, are derived by  <br /><br/>$pred4x4_L[x,y] = (p[0,-1]+p[1,-1]+p[2,-1]+p[3,-1]+2)»2$</p></p><p><p>Otherwise (some samples p[ x, .1 ], with x = 0..3, and some samples p[ .1, y ], with y = 0..3, are marked as “not available for Intra_4x4 prediction”), the values of the prediction samples $pred4x4_L$[ x, y ], with x, y = 0..3, are derived by<br /><br/>$pred4x4_L[x,y]=(1«(BitDepth_Y-1))$</p></blockquote></p>

<p>x264 中关于模式 Intra_4x4_DC 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_4x4_dc_128_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_DC</span><span class="p">(</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="mi">1</span> <span class="err">« </span><span class="p">(</span><span class="n">BIT_DEPTH</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">)</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_4x4_dc_left_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">pixel4</span> <span class="n">dc</span> <span class="o">=</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="p">(</span><span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span> <span class="o">+</span> <span class="mi">2</span><span class="p">)</span><span class="err"> »</span> <span class="mi">2</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_DC</span><span class="p">(</span> <span class="n">dc</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_4x4_dc_top_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">pixel4</span> <span class="n">dc</span> <span class="o">=</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="p">(</span><span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="mi">2</span><span class="p">)</span><span class="err"> »</span> <span class="mi">2</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_DC</span><span class="p">(</span> <span class="n">dc</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">x264_predict_4x4_dc_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">pixel4</span> <span class="n">dc</span> <span class="o">=</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="p">(</span><span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span> <span class="o">+</span>
</span><span class='line'>                                 <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="mi">4</span><span class="p">)</span><span class="err"> »</span> <span class="mi">3</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_DC</span><span class="p">(</span> <span class="n">dc</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra4x4diagonaldownleft-">Intra_4x4_Diagonal_Down_Left 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_4x4 prediction mode is invoked when Intra4x4PredMode[ luma4x4BlkIdx ] is equal to 3.<br/>This mode shall be used only when the samples p[ x, −1 ] with x = 0..7 are marked as “available for Intra_4x4 prediction”.<br/>The values of the prediction samples $pred4x4_L[ x, y ]$, with x, y = 0..3, are derived as follows:</p></p><p><p>If x is equal to 3 and y is equal to 3,<br/>$pred4x4_L[ x, y ] = ( p[ 6, .1 ] + 3 * p[ 7, .1 ] + 2 ) » 2$</p></p><p><p>Otherwise (x is not equal to 3 or y is not equal to 3),<br/>$pred4x4_L[ x, y ] = ( p[ x + y, −1 ] + 2 * p[ x + y + 1, −1 ] + p[ x + y + 2, −1 ] + 2 ) » 2$</p></blockquote></p>

<p>x264 中关于模式 Intra_4x4_DC 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define PREDICT_4x4_LOAD_LEFT\</span>
</span><span class='line'><span class="cp">    int l0 = SRC(-1,0);\</span>
</span><span class='line'><span class="cp">    int l1 = SRC(-1,1);\</span>
</span><span class='line'><span class="cp">    int l2 = SRC(-1,2);\</span>
</span><span class='line'><span class="cp">    UNUSED int l3 = SRC(-1,3);&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;define-predict4x4loadtop&quot;</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">PREDICT_4x4_LOAD_TOP</span><span class="err">\</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">t0</span> <span class="o">=</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>\
</span><span class='line'><span class="kt">int</span> <span class="n">t1</span> <span class="o">=</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>\
</span><span class='line'><span class="kt">int</span> <span class="n">t2</span> <span class="o">=</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>\
</span><span class='line'><span class="n">UNUSED</span> <span class="kt">int</span> <span class="n">t3</span> <span class="o">=</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;define-predict4x4loadtopright&quot;</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">PREDICT_4x4_LOAD_TOP_RIGHT</span><span class="err">\</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">t4</span> <span class="o">=</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>\
</span><span class='line'><span class="kt">int</span> <span class="n">t5</span> <span class="o">=</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>\
</span><span class='line'><span class="kt">int</span> <span class="n">t6</span> <span class="o">=</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>\
</span><span class='line'><span class="n">UNUSED</span> <span class="kt">int</span> <span class="n">t7</span> <span class="o">=</span> <span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;define-f1ab---ab11&quot;</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">F1</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>   <span class="p">(((</span><span class="n">a</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="n">b</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="err">»</span><span class="mi">1</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="err">#</span><span class="n">define</span> <span class="n">F2</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">)</span> <span class="p">(((</span><span class="n">a</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="n">b</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="n">c</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="err">»</span><span class="mi">2</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="kt">void</span> <span class="n">x264_predict_4x4_ddl_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_LOAD_TOP</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_LOAD_TOP_RIGHT</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">,</span><span class="n">t7</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t6</span><span class="p">,</span><span class="n">t7</span><span class="p">,</span><span class="n">t7</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra4x4diagonaldownright-">Intra_4x4_Diagonal_Down_Right 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_4x4 prediction mode is invoked when Intra4x4PredMode[ luma4x4BlkIdx ] is equal to 4.<br/>This mode shall be used only when the samples p[ x, .1 ] with x = 0..3 and p[ .1, y ] with y = .1..3 are marked as “available for Intra_4x4 prediction”.<br/>The values of the prediction samples $pred4x4_L[ x, y ]$, with x, y = 0..3, are derived as follows:<br /><br/>If x is greater than y,<br /><br/>$pred4x4_L[ x, y ] = ( p[ x − y − 2, −1] + 2 * p[ x − y − 1, −1 ] + p[ x − y, −1 ] + 2 ) » 2$<br/>Otherwise if x is less than y,<br /><br/>$pred4x4_L[ x, y ] = ( p[ −1, y − x − 2 ] + 2 * p[ −1, y − x − 1 ] + p[ −1, y − x ] + 2 ) » 2$<br/>Otherwise (x is equal to y),<br /><br/>$pred4x4_L[ x, y ] = ( p[ 0, .1 ] + 2 * p[ .1, .1 ] + p[ .1, 0 ] + 2 ) » 2$</p></blockquote></p>

<p>x264 中关于模式 Intra_4x4_Diagonal_Down_Right 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_4x4_ddr_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">lt</span> <span class="o">=</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_LOAD_LEFT</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_LOAD_TOP</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t3</span><span class="p">,</span><span class="n">t2</span><span class="p">,</span><span class="n">t1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t1</span><span class="p">,</span><span class="n">t0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t0</span><span class="p">,</span><span class="n">lt</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">lt</span><span class="p">,</span><span class="n">l0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">lt</span><span class="p">,</span><span class="n">l0</span><span class="p">,</span><span class="n">l1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">,</span><span class="n">l3</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra4x4verticalright-">Intra_4x4_Vertical_Right 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_4x4 prediction mode is invoked when Intra4x4PredMode[ luma4x4BlkIdx ] is equal to 5.<br/>This mode shall be used only when the samples p[ x, −1 ] with x = 0..3 and p[ −1, y ] with y = −1..3 are marked as “available for Intra_4x4 prediction”.<br/>Let the variable zVR be set equal to 2 * x − y.<br/>The values of the prediction samples $pred4x4_L[ x, y ]$, with x, y = 0..3, are derived as follows:</p></p><p><p>If zVR is equal to 0,2,4 or 6,<br /><br/>$pred_L[x,y]=(p[x-(y»1)-1,-1]+p[x-(y»1),-1]+1)»1$<br /><br/>Otherwise, if zVR is equal to 1, 3, or 5,<br /><br/>$pred4x4_L[x,y]=(p[x-(y»1)-2,-1]+2*p[x-(y»1)-1,-1]+p[x-(y»1),-1]+2)»2$<br/>Otherwise, if zVR is equal to −1,<br /><br/>$pred4x4_L[ x, y ] = (p[-1, 0 ] + 2 * p[ -1, -1 ] + p[ 0, -1 ] + 2 ) » 2$<br/>Otherwise (zVR is equal to -2 or -3),<br/>$pred4x4_L[ x, y ] = ( p[ −1, y − 1 ] + 2 * p[ −1, y − 2 ] + p[ −1, y − 3 ] + 2 ) » 2$</p></blockquote></p>

<p>x264 中关于模式 Intra_4x4_Vertical_Right 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_4x4_vr_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">lt</span> <span class="o">=</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_LOAD_LEFT</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_LOAD_TOP</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l2</span><span class="p">,</span><span class="n">l1</span><span class="p">,</span><span class="n">l0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l1</span><span class="p">,</span><span class="n">l0</span><span class="p">,</span><span class="n">lt</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">lt</span><span class="p">,</span><span class="n">t0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">lt</span><span class="p">,</span><span class="n">t0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">lt</span><span class="p">,</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra4x4horizontaldown-">Intra_4x4_Horizontal_Down 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_4x4 prediction mode is invoked when Intra4x4PredMode[ luma4x4BlkIdx ] is equal to 6.<br/>This mode shall be used only when the samples p[ x, -1 ] with x = 0..3 and p[ -1, y ] with y = .1..3 are marked as “available for Intra_4x4 prediction”.<br/>Let the variable zHD be set equal to 2 * y - x.<br/>The values of the prediction samples $pred4x4_L[ x, y ]$, with x, y = 0..3, are derived as follows:</p></p><p><p></p></blockquote></p>

<p>x264 中关于模式 Intra_4x4_Horizontal_Down 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_4x4_hd_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">lt</span><span class="o">=</span> <span class="n">SRC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_LOAD_LEFT</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_LOAD_TOP</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">l2</span><span class="p">,</span><span class="n">l3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">,</span><span class="n">l3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">l1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">lt</span><span class="p">,</span><span class="n">l0</span><span class="p">,</span><span class="n">l1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">lt</span><span class="p">,</span><span class="n">l0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">lt</span><span class="p">,</span><span class="n">l0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t0</span><span class="p">,</span><span class="n">lt</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t1</span><span class="p">,</span><span class="n">t0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra4x4verticalleft-">Intra_4x4_Vertical_Left 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_4x4 prediction mode is invoked when Intra4x4PredMode[ luma4x4BlkIdx ] is equal to 7.<br/>This mode shall be used only when the samples p[ x, −1 ] with x = 0..7 are marked as “available for Intra_4x4 prediction”.<br/>The values of the prediction samples $pred4x4_L[ x, y ]$, with x, y = 0..3, are derived as follows:</p></blockquote></p>

<p>x264 中关于模式 Intra_4x4_Vertical_Left 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_4x4_vl_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_LOAD_TOP</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_LOAD_TOP_RIGHT</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra4x4horizontalup-">Intra_4x4_Horizontal_Up 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_4x4 prediction mode is invoked when Intra4x4PredMode[ luma4x4BlkIdx ] is equal to 8.<br/>This mode shall be used only when the samples p[ −1, y ] with y = 0..3 are marked as “available for Intra_4x4 prediction”.<br/>Let the variable zHU be set equal to x + 2 * y.<br/>The values of the prediction samples $pred4x4_L[ x, y ]$, with x, y = 0..3, are derived as follows:</p></p><p><p></p></blockquote></p>

<p>x264 中关于模式 Intra_4x4_Horizontal_Up 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_4x4_hu_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_4x4_LOAD_LEFT</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">l1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">,</span><span class="n">l3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">l2</span><span class="p">,</span><span class="n">l3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l2</span><span class="p">,</span><span class="n">l3</span><span class="p">,</span><span class="n">l3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">l3</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="intra8x8-">Intra_8x8 预测模式</h2>

<p>x264 中对 8x8 的预测模式如下：</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">intra8x8Predmodei[luma8x8BlkIdx]</th>
      <th style="text-align: center">Name of Intra8x8PredMode[luma8x8BlkIdx]</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">0</td>
      <td style="text-align: center">Intra_8x8_Vertical(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">Intra_8x8_Horizontal(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">Intra_8x8_DC(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">3</td>
      <td style="text-align: center">Intra_8x8_Diagonal_Down_Left(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">Intra_8x8_Diagonal_Down_Right(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">5</td>
      <td style="text-align: center">Intra_8x8_Vertical_Right(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">6</td>
      <td style="text-align: center">Intra_8x8_Horizontal_Down(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">7</td>
      <td style="text-align: center">Intra_8x8_Vertical_Left(prediction mode)</td>
    </tr>
    <tr>
      <td style="text-align: center">8</td>
      <td style="text-align: center">Intra_8x8_Horizontal_Up(prediction mode)</td>
    </tr>
  </tbody>
</table>

<p>下面依次分析这几种预测模式：</p>

<h3 id="intra8x8vertical-">Intra_8x8_Vertical 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_8x8 prediction mode is invoked when Intra8x8PredMode[ luma8x8BlkIdx ] is equal to 0.<br/>This mode shall be used only when the samples p[ x, -1 ] with x = 0..7 are marked as “available for Intra_8x8 prediction”.<br/>The values of the prediction samples $pred8x8_L[ x, y ]$, with x, y = 0..7, are derived by <br /><br/>$pred8x8_L[x,y]=p’[x,-1],with x,y=0..7$</p></blockquote></p>

<p>X264 中关于模式 Intra_8x8_Vertical 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">x264_predict_8x8_v_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">src</span><span class="p">,</span> <span class="n">pixel</span> <span class="n">edge</span><span class="p">[</span><span class="mi">36</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">pixel4</span> <span class="n">top</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">edge</span><span class="o">+</span><span class="mi">16</span> <span class="p">),</span>
</span><span class='line'>                      <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">edge</span><span class="o">+</span><span class="mi">20</span> <span class="p">)</span> <span class="p">};</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">y</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">8</span><span class="p">;</span> <span class="n">y</span><span class="o">++</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">src</span><span class="o">+</span><span class="n">y</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">FDEC_STRIDE</span><span class="o">+</span><span class="mi">0</span> <span class="p">)</span> <span class="o">=</span> <span class="n">top</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>        <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">src</span><span class="o">+</span><span class="n">y</span><span class="o">*</span><span class="n">FDEC_STRIDE</span><span class="o">+</span><span class="mi">4</span> <span class="p">)</span> <span class="o">=</span> <span class="n">top</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra8x8horizontal-">Intra_8x8_Horizontal 预测模式</h3>

<p>在SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_8x8 prediction mode is invoked when Intra8x8PredMode[ luma8x8BlkIdx ] is equal to 1.<br/>This mode shall be used only when the samples p[ −1, y ], with y = 0..7, are marked as “available for Intra_8x8 prediction”.<br/>The values of the prediction samples $pred8x8_L[ x, y ]$, with x, y = 0..7, are derived by<br /><br/>$pred8x8_L[x,y]=p’[-1,y], with x,y=0..7$</p></blockquote></p>

<p>x264 中对 Intra_8x8_Horizontal 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define PL(y) \</span>
</span><span class='line'><span class="cp">    UNUSED int l##y = edge[14-y];</span>
</span><span class='line'><span class="cp">#define PT(x) \</span>
</span><span class='line'><span class="cp">    UNUSED int t##x = edge[16+x];</span>
</span><span class='line'><span class="cp">#define PREDICT_8x8_LOAD_TOPLEFT \</span>
</span><span class='line'><span class="cp">    int lt = edge[15];</span>
</span><span class='line'><span class="cp">#define PREDICT_8x8_LOAD_LEFT \</span>
</span><span class='line'><span class="cp">    PL(0) PL(1) PL(2) PL(3) PL(4) PL(5) PL(6) PL(7)</span>
</span><span class='line'><span class="cp">#define PREDICT_8x8_LOAD_TOP \</span>
</span><span class='line'><span class="cp">    PT(0) PT(1) PT(2) PT(3) PT(4) PT(5) PT(6) PT(7)</span>
</span><span class='line'><span class="cp">#define PREDICT_8x8_LOAD_TOPRIGHT \</span>
</span><span class='line'><span class="cp">    PT(8) PT(9) PT(10) PT(11) PT(12) PT(13) PT(14) PT(15)&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;define-predict8x8dcv-&quot;</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">PREDICT_8x8_DC</span><span class="p">(</span><span class="n">v</span><span class="p">)</span> <span class="err">\</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">y</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">8</span><span class="p">;</span> <span class="n">y</span><span class="o">++</span> <span class="p">)</span> <span class="p">{</span> \
</span><span class='line'>    <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">src</span><span class="o">+</span><span class="mi">0</span> <span class="p">)</span> <span class="o">=</span> <span class="n">v</span><span class="p">;</span> \
</span><span class='line'>    <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">src</span><span class="o">+</span><span class="mi">4</span> <span class="p">)</span> <span class="o">=</span> <span class="n">v</span><span class="p">;</span> \
</span><span class='line'>    <span class="n">src</span> <span class="o">+=</span> <span class="n">FDEC_STRIDE</span><span class="p">;</span> \
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">x264_predict_8x8_h_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">src</span><span class="p">,</span> <span class="n">pixel</span> <span class="n">edge</span><span class="p">[</span><span class="mi">36</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_LEFT</span>
</span><span class='line'><span class="cp">#define ROW(y) MPIXEL_X4( src+y&lt;/em&gt;FDEC_STRIDE+0 ) =\</span>
</span><span class='line'><span class="cp">               MPIXEL_X4( src+y*FDEC_STRIDE+4 ) = PIXEL_SPLAT_X4( l##y );</span>
</span><span class='line'>    <span class="n">ROW</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="n">ROW</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="n">ROW</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="n">ROW</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span> <span class="n">ROW</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span> <span class="n">ROW</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span> <span class="n">ROW</span><span class="p">(</span><span class="mi">6</span><span class="p">);</span> <span class="n">ROW</span><span class="p">(</span><span class="mi">7</span><span class="p">);</span>
</span><span class='line'><span class="cp">#undef ROW</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra8x8dc-">Intra_8x8_DC 预测模式</h3>

<p>在SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_8x8 prediction mode is invoked when Intra8x8PredMode[ luma8x8BlkIdx ] is equal to 2.<br/>The values of the prediction samples $pred8x8_L[ x, y ]$, with x, y = 0..7, are derived as follows:</p></blockquote></p>

<p>x264 中对 Intra_8x8_DC 模式的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_8x8_dc_128_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span><span class="p">,</span> <span class="n">pixel</span> <span class="n">edge</span><span class="p">[</span><span class="mi">36</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_DC</span><span class="p">(</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="mi">1</span> <span class="err">« </span><span class="p">(</span><span class="n">BIT_DEPTH</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">)</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_8x8_dc_left_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span><span class="p">,</span> <span class="n">pixel</span> <span class="n">edge</span><span class="p">[</span><span class="mi">36</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_LEFT</span>
</span><span class='line'>    <span class="n">pixel4</span> <span class="n">dc</span> <span class="o">=</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="p">(</span><span class="n">l0</span><span class="o">+</span><span class="n">l1</span><span class="o">+</span><span class="n">l2</span><span class="o">+</span><span class="n">l3</span><span class="o">+</span><span class="n">l4</span><span class="o">+</span><span class="n">l5</span><span class="o">+</span><span class="n">l6</span><span class="o">+</span><span class="n">l7</span><span class="o">+</span><span class="mi">4</span><span class="p">)</span><span class="err"> »</span> <span class="mi">3</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_DC</span><span class="p">(</span> <span class="n">dc</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_8x8_dc_top_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span><span class="p">,</span> <span class="n">pixel</span> <span class="n">edge</span><span class="p">[</span><span class="mi">36</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_TOP</span>
</span><span class='line'>    <span class="n">pixel4</span> <span class="n">dc</span> <span class="o">=</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="p">(</span><span class="n">t0</span><span class="o">+</span><span class="n">t1</span><span class="o">+</span><span class="n">t2</span><span class="o">+</span><span class="n">t3</span><span class="o">+</span><span class="n">t4</span><span class="o">+</span><span class="n">t5</span><span class="o">+</span><span class="n">t6</span><span class="o">+</span><span class="n">t7</span><span class="o">+</span><span class="mi">4</span><span class="p">)</span><span class="err"> »</span> <span class="mi">3</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_DC</span><span class="p">(</span> <span class="n">dc</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">x264_predict_8x8_dc_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span><span class="p">,</span> <span class="n">pixel</span> <span class="n">edge</span><span class="p">[</span><span class="mi">36</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_LEFT</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_TOP</span>
</span><span class='line'>    <span class="n">pixel4</span> <span class="n">dc</span> <span class="o">=</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="p">(</span><span class="n">l0</span><span class="o">+</span><span class="n">l1</span><span class="o">+</span><span class="n">l2</span><span class="o">+</span><span class="n">l3</span><span class="o">+</span><span class="n">l4</span><span class="o">+</span><span class="n">l5</span><span class="o">+</span><span class="n">l6</span><span class="o">+</span><span class="n">l7</span><span class="o">+</span><span class="n">t0</span><span class="o">+</span><span class="n">t1</span><span class="o">+</span><span class="n">t2</span><span class="o">+</span><span class="n">t3</span><span class="o">+</span><span class="n">t4</span><span class="o">+</span><span class="n">t5</span><span class="o">+</span><span class="n">t6</span><span class="o">+</span><span class="n">t7</span><span class="o">+</span><span class="mi">8</span><span class="p">)</span><span class="err"> »</span> <span class="mi">4</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_DC</span><span class="p">(</span> <span class="n">dc</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra8x8diagonaldownleft-">Intra_8x8_Diagonal_Down_Left 预测模式</h3>

<p>在SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_8x8 prediction mode is invoked when Intra8x8PredMode[ luma8x8BlkIdx ] is equal to 3.<br/>This mode shall be used only when the samples p[ x, −1 ] with x = 0..15 are marked as “available for Intra_8x8 prediction”.<br/>The values of the prediction samples $pred8x8_L[ x, y ]$, with x, y = 0..7, are derived as follows:<br /><br/>If x is equal to 7 and y is equal to 7,<br /><br/>$pred8xx_L[x,y]=( p′[ 14, −1 ] + 3 * p′[ 15, −1 ] + 2 ) » 2$<br/>Otherwise (x is not equal to 7 or y is not equal to 7)<br /><br/>$pred8x8_L[ x, y ] = ( p′[ x + y, −1 ] + 2 * p′[ x + y + 1, −1 ] + p′[ x + y + 2, −1 ] + 2 ) » 2$</p></blockquote></p>

<p>X264 中关于模式 Intra_8x8_Diagonal_Down_Left 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_8x8_ddl_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span><span class="p">,</span> <span class="n">pixel</span> <span class="n">edge</span><span class="p">[</span><span class="mi">36</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_TOP</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_TOPRIGHT</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">,</span><span class="n">t7</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t6</span><span class="p">,</span><span class="n">t7</span><span class="p">,</span><span class="n">t8</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t7</span><span class="p">,</span><span class="n">t8</span><span class="p">,</span><span class="n">t9</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t8</span><span class="p">,</span><span class="n">t9</span><span class="p">,</span><span class="n">t10</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t9</span><span class="p">,</span><span class="n">t10</span><span class="p">,</span><span class="n">t11</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t10</span><span class="p">,</span><span class="n">t11</span><span class="p">,</span><span class="n">t12</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t11</span><span class="p">,</span><span class="n">t12</span><span class="p">,</span><span class="n">t13</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t12</span><span class="p">,</span><span class="n">t13</span><span class="p">,</span><span class="n">t14</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t13</span><span class="p">,</span><span class="n">t14</span><span class="p">,</span><span class="n">t15</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t14</span><span class="p">,</span><span class="n">t15</span><span class="p">,</span><span class="n">t15</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra8x8diagonaldownright-">Intra_8x8_Diagonal_Down_Right 预测模式</h3>

<p>在SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_8x8 prediction mode is invoked when Intra8x8PredMode[ luma8x8BlkIdx ] is equal to 4.<br/>This mode shall be used only when the samples p[ x, .1 ] with x = 0..7 and p[ .1, y ] with y = .1..7 are marked as<br/>“available for Intra_8x8 prediction”.<br/>The values of the prediction samples $pred8x8_L[ x, y ]$, with x, y = 0..7, are derived as follows:<br /><br/>If x is greater than y,<br/>$pred8x8_L[ x, y ] = ( p′[ x − y − 2, −1] + 2 * p′[ x − y − 1, −1 ] + p′[ x − y, −1 ] + 2 ) » 2$<br/>Otherwise if x is less than y,<br/>$pred8x8_L[ x, y ] = ( p′[ .1, y . x . 2 ] + 2 * p′[ .1, y . x . 1 ] + p′[ .1, y . x ] + 2 ) » 2$<br/>Otherwise (x is equal to y),<br/>$pred8x8_L[ x, y ] = ( p′[ 0, −1 ] + 2 * p′[ −1, −1 ] + p′[ −1, 0 ] + 2 ) » 2$</p></blockquote></p>

<p>X264 中关于模式 Intra_8x8_Diagonal_Down_Right 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_8x8_ddr_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span><span class="p">,</span> <span class="n">pixel</span> <span class="n">edge</span><span class="p">[</span><span class="mi">36</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_TOP</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_LEFT</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_TOPLEFT</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l7</span><span class="p">,</span><span class="n">l6</span><span class="p">,</span><span class="n">l5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l6</span><span class="p">,</span><span class="n">l5</span><span class="p">,</span><span class="n">l4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l5</span><span class="p">,</span><span class="n">l4</span><span class="p">,</span><span class="n">l3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l4</span><span class="p">,</span><span class="n">l3</span><span class="p">,</span><span class="n">l2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l3</span><span class="p">,</span><span class="n">l2</span><span class="p">,</span><span class="n">l1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l2</span><span class="p">,</span><span class="n">l1</span><span class="p">,</span><span class="n">l0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l1</span><span class="p">,</span><span class="n">l0</span><span class="p">,</span><span class="n">lt</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">lt</span><span class="p">,</span><span class="n">t0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">lt</span><span class="p">,</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">,</span><span class="n">t7</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra8x8verticalright-">Intra_8x8_Vertical_Right 预测模式</h3>

<p>在SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_8x8 prediction mode is invoked when Intra8x8PredMode[ luma8x8BlkIdx ] is equal to 5.<br/>This mode shall be used only when the samples p[ x, -1 ] with x = 0..7 and p[ -1, y ] with y = -1..7 are marked as “available for Intra_8x8 prediction”.<br/>Let the variable zVR be set equal to 2 * x . y.<br/>The values of the prediction samples $pred8x8_L[ x, y ]$, with x, y = 0..7, are derived as follows:<br /><br/>If zVR is equal to 0, 2, 4, 6, 8, 10, 12, or 14<br /><br/>$pred8x8_L[x,y] = (p’[x-y(y»1)-1,-1] + p’[x-(y»1),-1]+1)»1$<br /><br/>Otherwise, if zVR is equal to 1, 3, 5, 7, 9, 11, or 13<br /><br/>$pred8x8_L[x,y]=(p’[x-(y»1)-2,-1]+2<em>p’[x-(y»1)-1,-1]+p’[x-(y»1),-1]+2)»2$<br /><br/>Otherwise, if zVR is equal to −1,<br /><br/>$pred8x8_L[ x, y ] = ( p′[ −1, 0 ] + 2 * p′[ −1, −1 ] + p′[ 0, −1 ] + 2 ) » 2$<br /><br/>Otherwise (zVR is equal to .2, .3, .4, .5, .6, or .7),<br /><br/>$pred8x8_L[ x, y ] = ( p′[ -1, y . 2</em>x - 1 ] + 2 * p′[ -1, y - 2<em>x - 2 ] + p′[ -1, y - 2</em>x - 3 ] + 2 ) » 2$</p></blockquote></p>

<p>X264 中关于模式 Intra_8x8_Vertical_Right 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_8x8_vr_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span><span class="p">,</span> <span class="n">pixel</span> <span class="n">edge</span><span class="p">[</span><span class="mi">36</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_TOP</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_LEFT</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_TOPLEFT</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l5</span><span class="p">,</span><span class="n">l4</span><span class="p">,</span><span class="n">l3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l6</span><span class="p">,</span><span class="n">l5</span><span class="p">,</span><span class="n">l4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l3</span><span class="p">,</span><span class="n">l2</span><span class="p">,</span><span class="n">l1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l4</span><span class="p">,</span><span class="n">l3</span><span class="p">,</span><span class="n">l2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l1</span><span class="p">,</span><span class="n">l0</span><span class="p">,</span><span class="n">lt</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l2</span><span class="p">,</span><span class="n">l1</span><span class="p">,</span><span class="n">l0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">lt</span><span class="p">,</span><span class="n">t0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">lt</span><span class="p">,</span><span class="n">t0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">lt</span><span class="p">,</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">,</span><span class="n">t7</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t6</span><span class="p">,</span><span class="n">t7</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra8x8horizontaldown-">Intra_8x8_Horizontal_Down 预测模式</h3>

<p>在SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_8x8 prediction mode is invoked when Intra8x8PredMode[ luma8x8BlkIdx ] is equal to 6.<br/>This mode shall be used only when the samples p[ x, −1 ] with x = 0..7 and p[ −1, y ] with y = −1..7 are marked as “available for Intra_8x8 prediction”.<br/>Let the variable zHD be set equal to 2 * y − x.<br/>The values of the prediction samples $pred8x8_L[ x, y ]$, with x, y = 0..7, are derived as follows:<br /><br/>If zHD is equal to 0, 2, 4, 6, 8, 10, 12, or 14<br /><br/>$pred8x8_L[ x, y ] = ( p′[ −1, y − ( x » 1 ) − 1 ] + p′[ −1, y − ( x » 1 ) ] + 1 ) » 1$<br /><br/>Otherwise, if zHD is equal to 1, 3, 5, 7, 9, 11, or 13<br /><br/>$pred8x8_L[x,y]=(p′[-1, y -(x»1)-2]+2<em>p′[-1,y-(x»1)-1]+p′[-1,y-(x»1)]+2)»2$<br/>Otherwise, if zHD is equal to −1,<br/>$pred8x8L[ x, y ] = ( p′[ −1, 0 ] + 2 * p′[ −1, −1 ] + p′[ 0, −1 ] + 2 ) » 2$<br/>Otherwise (zHD is equal to −2, −3, −4, −5, −6, −7),<br/>$pred8x8L[ x, y ] = ( p′[ x − 2</em>y − 1, −1 ] + 2 * p′[ x − 2<em>y − 2, −1 ] + p′[ x − 2</em>y − 3, −1 ] + 2 ) » 2$</p></blockquote></p>

<p>X264 中关于模式 Intra_8x8_Horizontal_Down 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_8x8_hd_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span><span class="p">,</span> <span class="n">pixel</span> <span class="n">edge</span><span class="p">[</span><span class="mi">36</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_TOP</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_LEFT</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_TOPLEFT</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p1</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l6</span><span class="p">,</span><span class="n">l7</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l5</span><span class="p">,</span><span class="n">l6</span><span class="p">,</span><span class="n">l7</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p2</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l5</span><span class="p">,</span><span class="n">l6</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l4</span><span class="p">,</span><span class="n">l5</span><span class="p">,</span><span class="n">l6</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p3</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l4</span><span class="p">,</span><span class="n">l5</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l3</span><span class="p">,</span><span class="n">l4</span><span class="p">,</span><span class="n">l5</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p4</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l3</span><span class="p">,</span><span class="n">l4</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l2</span><span class="p">,</span><span class="n">l3</span><span class="p">,</span><span class="n">l4</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p5</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l2</span><span class="p">,</span><span class="n">l3</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">,</span><span class="n">l3</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p6</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p7</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">l1</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">lt</span><span class="p">,</span><span class="n">l0</span><span class="p">,</span><span class="n">l1</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p8</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">lt</span><span class="p">,</span><span class="n">l0</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">lt</span><span class="p">,</span><span class="n">t0</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p9</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F2</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t0</span><span class="p">,</span><span class="n">lt</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t1</span><span class="p">,</span><span class="n">t0</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p10</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F2</span><span class="p">(</span><span class="n">t3</span><span class="p">,</span><span class="n">t2</span><span class="p">,</span><span class="n">t1</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">t4</span><span class="p">,</span><span class="n">t3</span><span class="p">,</span><span class="n">t2</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p11</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F2</span><span class="p">(</span><span class="n">t5</span><span class="p">,</span><span class="n">t4</span><span class="p">,</span><span class="n">t3</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">t6</span><span class="p">,</span><span class="n">t5</span><span class="p">,</span><span class="n">t4</span><span class="p">));</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p1</span><span class="p">,</span><span class="n">p2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p2</span><span class="p">,</span><span class="n">p3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p3</span><span class="p">,</span><span class="n">p4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p4</span><span class="p">,</span><span class="n">p5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p5</span><span class="p">,</span><span class="n">p6</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p6</span><span class="p">,</span><span class="n">p7</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p7</span><span class="p">,</span><span class="n">p8</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p8</span><span class="p">,</span><span class="n">p9</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p9</span><span class="p">,</span><span class="n">p10</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p10</span><span class="p">,</span><span class="n">p11</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra8x8verticalleft-">Intra_8x8_Vertical_Left 预测模式</h3>

<p>在SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_8x8 prediction mode is invoked when Intra8x8PredMode[ luma8x8BlkIdx ] is equal to 7.<br/>This mode shall be used only when the samples p[ x, −1 ] with x = 0..15 are marked as “available for Intra_8x8 prediction”.<br/>The values of the prediction samples $pred8x8_L[ x, y ]$, with x, y = 0..7, are derived as follows:<br /><br/>If y is equal to 0, 2, 4 or 6<br /><br/>$pred8x8_L[ x, y ] = ( p′[ x + ( y » 1 ), .1 ] + p′[ x + ( y » 1 ) + 1, .1 ] + 1) » 1$<br /><br/>Otherwise (y is equal to 1, 3, 5, 7),<br /><br/>$pred8x8_L[ x, y ] = ( p′[ x + ( y » 1 ), −1 ] + 2 * p′[ x + ( y » 1 ) + 1, −1 ] + p′[ x + ( y » 1 ) + 2, −1 ] + 2 ) »2$</p></blockquote></p>

<p>X264 中关于模式 Intra_8x8_Horizontal_Down 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_8x8_vl_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span><span class="p">,</span> <span class="n">pixel</span> <span class="n">edge</span><span class="p">[</span><span class="mi">36</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_TOP</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_TOPRIGHT</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t0</span><span class="p">,</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t4</span><span class="p">,</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t5</span><span class="p">,</span><span class="n">t6</span><span class="p">,</span><span class="n">t7</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t6</span><span class="p">,</span><span class="n">t7</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t6</span><span class="p">,</span><span class="n">t7</span><span class="p">,</span><span class="n">t8</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t7</span><span class="p">,</span><span class="n">t8</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t7</span><span class="p">,</span><span class="n">t8</span><span class="p">,</span><span class="n">t9</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t8</span><span class="p">,</span><span class="n">t9</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t8</span><span class="p">,</span><span class="n">t9</span><span class="p">,</span><span class="n">t10</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t9</span><span class="p">,</span><span class="n">t10</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span><span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t9</span><span class="p">,</span><span class="n">t10</span><span class="p">,</span><span class="n">t11</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">F1</span><span class="p">(</span><span class="n">t10</span><span class="p">,</span><span class="n">t11</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">=</span> <span class="n">F2</span><span class="p">(</span><span class="n">t10</span><span class="p">,</span><span class="n">t11</span><span class="p">,</span><span class="n">t12</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="intra8x8horizontalup-">Intra_8x8_Horizontal_Up 预测模式</h3>

<p>在SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_8x8 prediction mode is invoked when Intra8x8PredMode[ luma8x8BlkIdx ] is equal to 8.<br/>This mode shall be used only when the samples p[ -1, y ] with y = 0..7 are marked as “available for Intra_8x8 prediction”.<br/>Let the variable zHU be set equal to x + 2 * y.<br/>The values of the prediction samples $pred8x8_L[ x, y ]$, with x, y = 0..7, are derived as follows:<br /><br/>If zHU is equal to 0, 2, 4, 6, 8, 10, or 12<br /><br/>$pred8x8_L[ x, y ] = ( p′[ −1, y + ( x » 1 ) ] + p′[ −1, y + ( x » 1 ) + 1 ] + 1 ) » 1$<br/>Otherwise, if zHU is equal to 1, 3, 5, 7, 9, or 11<br /><br/>$pred8x8_L[ x, y ] = ( p′[ −1, y + ( x » 1 ) ] + 2 * p′[ −1, y + ( x » 1 ) + 1 ] + p′[ −1, y + ( x » 1 ) + 2 ] + 2 ) »2$<br/>Otherwise, if zHU is equal to 13,<br /><br/>$pred8x8_L[ x, y ] = ( p′[ −1, 6 ] + 3 * p′[ −1, 7 ] + 2 ) » 2$<br /><br/>Otherwise (zHU is greater than 13),<br /><br/>$pred8x8_L[x,y]=p’[-1,7]$</p></blockquote></p>

<p>X264 中关于模式 Intra_8x8_Horizontal_Up 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">x264_predict_8x8_hu_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span><span class="p">,</span> <span class="n">pixel</span> <span class="n">edge</span><span class="p">[</span><span class="mi">36</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">PREDICT_8x8_LOAD_LEFT</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p1</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">l1</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l0</span><span class="p">,</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p2</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l1</span><span class="p">,</span><span class="n">l2</span><span class="p">,</span><span class="n">l3</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p3</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l2</span><span class="p">,</span><span class="n">l3</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l2</span><span class="p">,</span><span class="n">l3</span><span class="p">,</span><span class="n">l4</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p4</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l3</span><span class="p">,</span><span class="n">l4</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l3</span><span class="p">,</span><span class="n">l4</span><span class="p">,</span><span class="n">l5</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p5</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l4</span><span class="p">,</span><span class="n">l5</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l4</span><span class="p">,</span><span class="n">l5</span><span class="p">,</span><span class="n">l6</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p6</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l5</span><span class="p">,</span><span class="n">l6</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l5</span><span class="p">,</span><span class="n">l6</span><span class="p">,</span><span class="n">l7</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p7</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">F1</span><span class="p">(</span><span class="n">l6</span><span class="p">,</span><span class="n">l7</span><span class="p">),</span> <span class="n">F2</span><span class="p">(</span><span class="n">l6</span><span class="p">,</span><span class="n">l7</span><span class="p">,</span><span class="n">l7</span><span class="p">));</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">p8</span> <span class="o">=</span> <span class="n">pack_pixel_1to2</span><span class="p">(</span><span class="n">l7</span><span class="p">,</span><span class="n">l7</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p1</span><span class="p">,</span><span class="n">p2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p2</span><span class="p">,</span><span class="n">p3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">=</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p3</span><span class="p">,</span><span class="n">p4</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">=</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p4</span><span class="p">,</span><span class="n">p5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p5</span><span class="p">,</span><span class="n">p6</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">=</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p6</span><span class="p">,</span><span class="n">p7</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">=</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p7</span><span class="p">,</span><span class="n">p8</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">=</span> <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span> <span class="o">=</span> <span class="n">SRC_X4</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span> <span class="o">=</span> <span class="n">pack_pixel_2to4</span><span class="p">(</span><span class="n">p8</span><span class="p">,</span><span class="n">p8</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="intra16x16-">Intra_16x16 预测模式</h2>

<p>x264 中对 16x16 的预测模式如下：</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">intra16x16Predmode</th>
      <th style="text-align: center">Name of Intra16x16PredMode</th>
      <th style="text-align: center">Note</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">0</td>
      <td style="text-align: center">Intra_16x16_Vertical(prediction mode)</td>
      <td style="text-align: center">由上边像素推出相应像素值</td>
    </tr>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">Intra_16x16_Horicontal(prdiction mode)</td>
      <td style="text-align: center">由左边像素推出相应像素值</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">Intra_16x16_DC(prediction mode)</td>
      <td style="text-align: center">由上边和左边像素平均值推出相应像素值</td>
    </tr>
    <tr>
      <td style="text-align: center">3</td>
      <td style="text-align: center">Intra_16x16_Plane(prediction mode)</td>
      <td style="text-align: center">利用线性 plan 函数及左、上像素推出相应像素值，适用于亮度变化平缓区域</td>
    </tr>
  </tbody>
</table>

<p>下面依次分析这几种预测模式：</p>

<h3 id="intra16x16vertical-">Intra_16x16_Vertical 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_16x16 prediction mode shall be used only when the samples p[x, -1] with x=0…15 are marked as “available for Intra_16x16 prediction”.The values of the prediction samples pred[x, y] with x,y=0…15, are derived by pred[x,y]=p[x,-1],with x,y=0…15<br /></p></blockquote></p>

<p>x264 中关于模式 Vertical 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">x264_predict_16x16_v_c</span><span class="p">(</span><span class="n">pixel</span> <span class="o">*</span><span class="n">src</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">pixel4</span> <span class="n">v0</span> <span class="o">=</span> <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">src</span><span class="p">[</span> <span class="mi">0</span><span class="o">-</span><span class="n">FDEC_STRIDE</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">pixel4</span> <span class="n">v1</span> <span class="o">=</span> <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">src</span><span class="p">[</span> <span class="mi">4</span><span class="o">-</span><span class="n">FDEC_STRIDE</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">pixel4</span> <span class="n">v2</span> <span class="o">=</span> <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">src</span><span class="p">[</span> <span class="mi">8</span><span class="o">-</span><span class="n">FDEC_STRIDE</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">pixel4</span> <span class="n">v3</span> <span class="o">=</span> <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">src</span><span class="p">[</span><span class="mi">12</span><span class="o">-</span><span class="n">FDEC_STRIDE</span><span class="p">]</span> <span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">16</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">src</span><span class="o">+</span> <span class="mi">0</span> <span class="p">)</span> <span class="o">=</span> <span class="n">v0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">src</span><span class="o">+</span> <span class="mi">4</span> <span class="p">)</span> <span class="o">=</span> <span class="n">v1</span><span class="p">;</span>
</span><span class='line'>    <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">src</span><span class="o">+</span> <span class="mi">8</span> <span class="p">)</span> <span class="o">=</span> <span class="n">v2</span><span class="p">;</span>
</span><span class='line'>    <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">src</span><span class="o">+</span><span class="mi">12</span> <span class="p">)</span> <span class="o">=</span> <span class="n">v3</span><span class="p">;</span>
</span><span class='line'>    <span class="n">src</span> <span class="o">+=</span> <span class="n">FDEC_STRIDE</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
</code></pre>

<p>注意，上面代码中的 pixel 为 uint8_t，而 pixel4 为 uint32_t，而 MPIXEL_X4 定义如下：</p>

<p><code>
#define MPIXEL_X4(src) M32(src)  
#deinfe M32(src) (((x264_union32_t *)(src))-&gt;i)  
typedef union { uint32_t i; uint16_t b[2]; uint8_t  c[4]; } MAY_ALIAS x264_union32_t;
</code></p>

<h3 id="intra16x16horizontal-">Intra_16x16_Horizontal 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_16x16 prediction mode shall be used only when the samples p[−1, y] with y = 0..15 are marked as “available<br/>for Intra_16x16 prediction”.<br/>The values of the prediction samples predL[ x, y ], with x, y = 0..15, are derived by<br/>predL[ x, y ] = p[ −1, y ], with x, y = 0..15</p></blockquote></p>

<p>x264 中关于模式 Horizontal 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">x264_predict_16x16_h_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">16</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">const</span> <span class="n">pixel4</span> <span class="n">v</span> <span class="o">=</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="n">src</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>        <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">src</span><span class="o">+</span> <span class="mi">0</span> <span class="p">)</span> <span class="o">=</span> <span class="n">v</span><span class="p">;</span>
</span><span class='line'>        <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">src</span><span class="o">+</span> <span class="mi">4</span> <span class="p">)</span> <span class="o">=</span> <span class="n">v</span><span class="p">;</span>
</span><span class='line'>        <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">src</span><span class="o">+</span> <span class="mi">8</span> <span class="p">)</span> <span class="o">=</span> <span class="n">v</span><span class="p">;</span>
</span><span class='line'>        <span class="n">MPIXEL_X4</span><span class="p">(</span> <span class="n">src</span><span class="o">+</span><span class="mi">12</span> <span class="p">)</span> <span class="o">=</span> <span class="n">v</span><span class="p">;</span>
</span><span class='line'>        <span class="n">src</span> <span class="o">+=</span> <span class="n">FDEC_STRIDE</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>其中<code>PIXEL_SPLAT_X4</code>定义如下：</p>

<p><code>
#   define PIXEL_SPLAT_X4(x) ((x)*0x01010101U)
</code></p>

<h3 id="intra16x16dc-">Intra_16x16_DC 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_16x16 prediction mode operates, depending on whether the neighbouring samples are marked as “available for<br/>Intra_16x16 prediction”, as follows:</p></p><p><p>If all neighbouring samples p[x,-1] ], with x = 0..15, and p[ −1, y ], with y = 0..15, are marked as “available for<br/>Intra_16x16 prediction”, the prediction for all luma samples in the macroblock is given by:<br /><br/>$pred_L[x,y]=(\sum_{x’=0}^{15}p[x’,-1]+\sum_{y’=0}^{15}p[-1,y’]+16)»5, with x,y=0..15$</p></p><p><p>Otherwise, if any of the neighbouring samples p[ x, .1 ], with x = 0..15, are marked as “not available for Intra_16x16<br/>prediction” and all of the neighbouring samples p[ .1, y ], with y = 0..15, are marked as “available for Intra_16x16<br/>prediction”, the prediction for all luma samples in the macroblock is given by:<br /><br/>$pred_L[x,y]=(\sum_{y’=0}^{15}p[-1,y’]+8)»4, with x,y=0..15$</p></p><p><p>Otherwise, if any of the neighbouring samples p[ −1, y ], with y = 0..15, are marked as “not available for Intra_16x16<br/>prediction” and all of the neighbouring samples p[ x, −1 ], with x = 0..15, are marked as “available for Intra_16x16<br/>prediction”, the prediction for all luma samples in the macroblock is given by:<br /><br/>$pred_L[x,y]=(\sum_{x’=0}^{15}p[x’,-1]+8)»4, with x,y=0..15$</p></p><p><p>Otherwise (some of the neighbouring samples p[ x, .1 ], with x = 0..15, and some of the neighbouring samples<br/>p[ .1, y ], with y = 0..15, are marked as “not available for Intra_16x16 prediction”), the prediction for all luma samples<br/>in the macroblock is given by:<br /><br/>$pred_L[x,y]=(1«(BitDepth_Y - 1)), with x,y=0..15$</p></blockquote></p>

<p>x264 中关于模式 DC 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define PREDICT_16x16_DC(v)\</span>
</span><span class='line'><span class="cp">    for( int i = 0; i &amp;lt; 16; i++ )\</span>
</span><span class='line'><span class="cp">    {\</span>
</span><span class='line'><span class="cp">        MPIXEL_X4( src+ 0 ) = v;\</span>
</span><span class='line'><span class="cp">        MPIXEL_X4( src+ 4 ) = v;\</span>
</span><span class='line'><span class="cp">        MPIXEL_X4( src+ 8 ) = v;\</span>
</span><span class='line'><span class="cp">        MPIXEL_X4( src+12 ) = v;\</span>
</span><span class='line'><span class="cp">        src += FDEC_STRIDE;\</span>
</span><span class='line'><span class="cp">    }&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">x264_predict_16x16_dc_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">dc</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">16</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">dc</span> <span class="o">+=</span> <span class="n">src</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span> <span class="o">+</span> <span class="n">i</span> <span class="o">*</span> <span class="n">FDEC_STRIDE</span><span class="p">];</span>
</span><span class='line'>    <span class="n">dc</span> <span class="o">+=</span> <span class="n">src</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="n">FDEC_STRIDE</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">pixel4</span> <span class="n">dcsplat</span> <span class="o">=</span> <span class="n">PIXEL_SPLAT_X4</span><span class="p">(</span> <span class="p">(</span> <span class="n">dc</span> <span class="o">+</span> <span class="mi">16</span> <span class="p">)</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">5</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">PREDICT_16x16_DC</span><span class="p">(</span> <span class="n">dcsplat</span> <span class="p">);</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
</code></pre>

<h3 id="intra16x16plane-">Intra_16x16_Plane 预测模式</h3>

<p>在 SPEC 中，关于该预测模式的定义如下：</p>

<p><blockquote><p>This Intra_16x16 prediction mode shall be used only when the samples p[ x, .1 ] with x = .1..15 and p[ .1, y ] with y = 0..15 are marked as “available for Intra_16x16 prediction”.<br /><br/>The values of the prediction samples $pred_L[x,y]$,with x,y=0…15, are derived by<br /><br/>$pred_L[x,y]=Clip1<em>Y((a+b*(x-7)+c*(y-7)+16)»5)$,with x,y=0…15, where <br /><br/>$a = 16 * ( p[ .1, 15 ] + p[ 15, .1 ] )$ <br /><br/>$b = ( 5 * H + 32 ) » 6$ <br /><br/>$c = ( 5 * V + 32 ) » 6$   <br /><br/>and H and V are specified as <br /><br/>$H=\sum</em>{x’=0}^{7}(x’+1)<em>(p[8+x’,-1]-p[6-x’,-1])$  <br /><br/>$V=\sum_{y’=0}^{7}(y’+1)</em>(p[-1,8+y’]-p[-1,6-y’])$  <br /></p></blockquote></p>

<p>x264 中关于模式 Plane 的代码如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">x264_predict_16x16_p_c</span><span class="p">(</span> <span class="n">pixel</span> <span class="o">*</span><span class="n">src</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">H</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">V</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/* calculate H and V */</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">7</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">H</span> <span class="o">+=</span> <span class="p">(</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">)</span> <span class="o">*</span> <span class="p">(</span> <span class="n">src</span><span class="p">[</span> <span class="mi">8</span> <span class="o">+</span> <span class="n">i</span> <span class="o">-</span> <span class="n">FDEC_STRIDE</span> <span class="p">]</span> <span class="o">-</span> <span class="n">src</span><span class="p">[</span><span class="mi">6</span> <span class="o">-</span><span class="n">i</span> <span class="o">-</span><span class="n">FDEC_STRIDE</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">V</span> <span class="o">+=</span> <span class="p">(</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">)</span> <span class="o">*</span> <span class="p">(</span> <span class="n">src</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span> <span class="o">+</span> <span class="p">(</span><span class="mi">8</span><span class="o">+</span><span class="n">i</span><span class="p">)</span><span class="o">*</span><span class="n">FDEC_STRIDE</span><span class="p">]</span> <span class="o">-</span> <span class="n">src</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span> <span class="o">+</span> <span class="p">(</span><span class="mi">6</span><span class="o">-</span><span class="n">i</span><span class="p">)</span><span class="o">*</span><span class="n">FDEC_STRIDE</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">16</span> <span class="o">*</span> <span class="p">(</span> <span class="n">src</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span> <span class="o">+</span> <span class="mi">15</span><span class="o">*</span><span class="n">FDEC_STRIDE</span><span class="p">]</span> <span class="o">+</span> <span class="n">src</span><span class="p">[</span><span class="mi">15</span> <span class="o">-</span> <span class="n">FDEC_STRIDE</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="p">(</span> <span class="mi">5</span> <span class="o">*</span> <span class="n">H</span> <span class="o">+</span> <span class="mi">32</span> <span class="p">)</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">6</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="p">(</span> <span class="mi">5</span> <span class="o">*</span> <span class="n">V</span> <span class="o">+</span> <span class="mi">32</span> <span class="p">)</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">6</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">i00</span> <span class="o">=</span> <span class="n">a</span> <span class="o">-</span> <span class="n">b</span> <span class="o">*</span> <span class="mi">7</span> <span class="o">-</span> <span class="n">c</span> <span class="o">*</span> <span class="mi">7</span> <span class="o">+</span> <span class="mi">16</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">y</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">16</span><span class="p">;</span> <span class="n">y</span><span class="o">++</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">pix</span> <span class="o">=</span> <span class="n">i00</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">16</span><span class="p">;</span> <span class="n">x</span><span class="o">++</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">src</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">=</span> <span class="n">x264_clip_pixel</span><span class="p">(</span> <span class="n">pix</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="mi">5</span> <span class="p">);</span>
</span><span class='line'>        <span class="n">pix</span> <span class="o">+=</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">src</span> <span class="o">+=</span> <span class="n">FDEC_STRIDE</span><span class="p">;</span>
</span><span class='line'>    <span class="n">i00</span> <span class="o">+=</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="n">ALWAYS_INLINE</span> <span class="n">pixel</span> <span class="n">x264_clip_pixel</span><span class="p">(</span> <span class="kt">int</span> <span class="n">x</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span> <span class="p">(</span><span class="n">x</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="o">~</span><span class="n">PIXEL_MAX</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="o">-</span><span class="n">x</span><span class="p">)</span><span class="err">»</span><span class="mi">31</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="nl">PIXEL_MAX</span> <span class="p">:</span> <span class="n">x</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[X264源码解析之x264_encoder_open函数]]></title>
    <link href="http://lazybing.github.io/blog/2017/06/24/x264-encoder-open/"/>
    <updated>2017-06-24T18:24:01-07:00</updated>
    <id>http://lazybing.github.io/blog/2017/06/24/x264-encoder-open</id>
    <content type="html"><![CDATA[
<p>本文主要记录<code>x264_encoder_open</code>函数。</p>

<!--more-->

]]></content>
  </entry>
  
</feed>
