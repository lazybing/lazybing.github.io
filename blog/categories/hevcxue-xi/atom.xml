<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类:hevc学习 | 懒人李冰]]></title>
  <link href="http://lazybing.github.io/blog/categories/hevcxue-xi/atom.xml" rel="self"/>
  <link href="http://lazybing.github.io/"/>
  <updated>2017-11-25T18:52:01-08:00</updated>
  <id>http://lazybing.github.io/</id>
  <author>
    <name><![CDATA[李冰]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HEVC SPEC 学习之 Frame Rate]]></title>
    <link href="http://lazybing.github.io/blog/2016/11/25/hevc-fps/"/>
    <updated>2016-11-25T00:13:47-08:00</updated>
    <id>http://lazybing.github.io/blog/2016/11/25/hevc-fps</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#sps-frame-rate" id="markdown-toc-sps-frame-rate">SPS Frame Rate</a></li>
  <li><a href="#vps-frame-rate" id="markdown-toc-vps-frame-rate">VPS Frame Rate</a></li>
  <li><a href="#container-frame-rate" id="markdown-toc-container-frame-rate">Container Frame Rate</a></li>
  <li><a href="#pts-frame-rate" id="markdown-toc-pts-frame-rate">PTS Frame Rate</a></li>
</ul>

<p><code>Frame Rate</code>是显示器上显示图像的频率,单位是 Hz,它作为视频文件的一个重要参数，本文记录<code>HEVC</code>码流中它的计算方法。</p>

<!--more-->

<p>HEVC 中关于<code>Frame Rate</code>的计算可以包含五中：从<code>SPS</code>中获取、从<code>VPS</code>中获取、从视频文件的<code>Container</code>层获取、根据PTS获取、选择默认值。</p>

<h2 id="sps-frame-rate">SPS Frame Rate</h2>

<ul>
  <li>vui_parameters_present_flag 值为 1 表示该码流中<code>vui_parameters()</code>语法结构存在。否则，该码流中不存在 VUI 结构。</li>
  <li>vui_timing_info_present_flag 值为 1 表示该码流中<code>vui_num_units_in_tick</code>、<code>vui_time_scale</code>、<code>vui_poc_proportional_to_timing_flag</code>和<code>vui_hrd_parameters_present_flag</code>存在，否则这些语法元素不存在。</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">if(vui_timing_info_present_flag){</th>
      <th style="text-align: center"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">vui_num_units_in_tick</td>
      <td style="text-align: center">u(u32)</td>
    </tr>
    <tr>
      <td style="text-align: center">vui_time_scale</td>
      <td style="text-align: center">u(32)</td>
    </tr>
    <tr>
      <td style="text-align: center">vui_poc_proportional_to_timing_flag</td>
      <td style="text-align: center">u(1)</td>
    </tr>
    <tr>
      <td style="text-align: center">…</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">}</td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<ul>
  <li>vui_num_units_in_tick 是运行在<code>time_scale Hz</code>的频率（相应地时钟跳变计数器加一，称作一个时钟跳变）下的时钟的时间单元的数量。<code>vui_num_units_in_tick</code>应该大于 0。
一个时钟跳变(单位是秒)，它等于<code>vui_num_units_in_tick</code>除以<code>vui_time_scale</code>的四分之一。例如，视频信号的采样率是 25Hz,<code>vui_time_scale</code>值为 27000000,<code>vui_num_units_in_tick</code>值为1080000,因此一个时钟跳变值为 0.04 秒。</li>
</ul>

<p>当 SPS 参考的 VPS 中有<code>vps_num_units_in_tick</code>存在时，<code>vui_num_units_in_tick</code>如果存在，就应该等于<code>vps_num_units_in_tick</code>,<code>vui_num_units_in_tick</code>如果不存在，被推断为<code>vps_num_units_in_tick</code>。</p>

<ul>
  <li>vui_time_scale 是一秒内时间单元的数量。例如，一个以 27MHz 的时钟测量时间的时间坐标系的<code>time_scale</code>为 27000000。<code>vui_time_scale</code>的值应该大于 0。</li>
</ul>

<p>当 SPS 参考的 VPS 中有<code>vps_time_scale</code>存在时，<code>vui_time_scale</code>如果存在，就应该等于<code>vps_time_scale</code>,<code>vui_time_scale</code>如果不存在，被推断为<code>vps_num_units_in_tick</code>。</p>

<p>通过 SPS 计算的 FPS 的值为<code>fps = sps-&gt;vui-&gt;time_scale/sps-&gt;vui_num_units_in_tick</code>。</p>

<h2 id="vps-frame-rate">VPS Frame Rate</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">if(vps_timing_info_present_flag){</th>
      <th style="text-align: center"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">vps_num_units_in_tick</td>
      <td style="text-align: center">u(32)</td>
    </tr>
    <tr>
      <td style="text-align: center">vps_time_scale</td>
      <td style="text-align: center">u(32)</td>
    </tr>
    <tr>
      <td style="text-align: center">vps_poc_proporitonal_to_timing_flag</td>
      <td style="text-align: center">u(1)</td>
    </tr>
    <tr>
      <td style="text-align: center">…</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">}</td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<ul>
  <li>
    <p>vps_num_units_in_tick 是运行在<code>vps_time_scale Hz</code>的频率（相应地时钟跳变计数器加一，称作一个时钟跳变）下的时钟的时间单元的数量。<code>vps_num_units_in_tick</code>应该大于 0。
一个时钟跳变(单位是秒)，它等于<code>vps_num_units_in_tick</code>除以<code>vps_time_scale</code>的四分之一。例如，视频信号的采样率是 25Hz,<code>vps_time_scale</code>值为 27000000,<code>vps_num_units_in_tick</code>值为1080000,因此一个时钟跳变值为 0.04 秒。</p>
  </li>
  <li>
    <p>vps_time_scale 是一秒内时间单元的数量。例如，一个以 27MHz 的时钟测量时间的时间坐标系的<code>vps_time_scale</code>为 27000000。<code>vps_time_scale</code>的值应该大于 0。</p>
  </li>
</ul>

<p>通过 VPS 计算的 FPS 的值为<code>fps = vps-&gt;time_scale / vps-&gt;num_units_in_tick</code>。</p>

<h2 id="container-frame-rate">Container Frame Rate</h2>

<p>这种方法得到的<code>Frame Rate</code>，其实并不是通过解码器得到的，而是通过从 DMX 端通过分析<code>Container</code>得到的，此处不做分析。</p>

<h2 id="pts-frame-rate">PTS Frame Rate</h2>

<p>如果上面都没有<code>Frame Rate</code>的信息，就可以通过<code>PTS</code>来计算出<code>Frame Rate</code>。方法就是通过计算 PTS 的间隔，然后得出<code>Frame Rate</code>的值。</p>

<blockquote>
  <p>注意，对于<code>HEVC</code>中，如果是<code>Interlace</code>码流，<code>Frame Rate</code>需要减半。</p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HEVC SPEC 学习之SEI——Recovery_Point]]></title>
    <link href="http://lazybing.github.io/blog/2016/11/24/hevc-sei-recovery-point/"/>
    <updated>2016-11-24T18:05:50-08:00</updated>
    <id>http://lazybing.github.io/blog/2016/11/24/hevc-sei-recovery-point</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#recovery-point-sei-" id="markdown-toc-recovery-point-sei-">Recovery point SEI 消息语法</a></li>
  <li><a href="#recovery-point-sei--1" id="markdown-toc-recovery-point-sei--1">Recovery point SEI 消息语义</a></li>
  <li><a href="#hm--recoverypoint" id="markdown-toc-hm--recoverypoint">HM 中的 Recovery_Point</a></li>
</ul>

<p>本文主要记录 HEVC 中的 Recovery_Point 这一类 SEI PayloadType 的介绍。<code>recovery point</code>与<code>H264</code>中<code>recovery point</code>的功能是相似的，主要作用是帮助解码器确认，在解码器凯斯随机
访问或解码器遇到序列中断的链接以后，解码过程生成能够合格显示的图像的时间。</p>

<!--more-->

<h2 id="recovery-point-sei-">Recovery point SEI 消息语法</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">recovery_point(payloadSize)</th>
      <th style="text-align: center">Descriptor</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">recovery_poc_cnt</td>
      <td style="text-align: center">se(v)</td>
    </tr>
    <tr>
      <td style="text-align: center">exact_match_flag</td>
      <td style="text-align: center">u(1)</td>
    </tr>
    <tr>
      <td style="text-align: center">broken_link_flag</td>
      <td style="text-align: center">u(1)</td>
    </tr>
  </tbody>
</table>

<h2 id="recovery-point-sei--1">Recovery point SEI 消息语义</h2>

<p>当解码过程从一个解码顺序中与<code>recovery point sei payloadType</code>关联的访问单元开始时，所有此<code>SEI</code>消息指明的输出
顺序中<code>recovery point</code>以后的解码图像都是内容正确或大致正确的(即显示时不会有明显的马赛克)。有<code>recovery point sei payloadType</code>关联
的图像之前的随机访问单元生成的解码图像在内容上不一定是正确的，直到指定的<code>recovery point</code>。从与<code>recovery point sei payloadType</code>的访问
单元开始的解码过程操作可以包含对解码图像缓冲区不存在的图像的引用。</p>

<ul>
  <li>
    <p>recovery_poc_cnt 指定输出顺序中解码图像的恢复点。如果存在图像A, 以解码顺序看它在当前图像(与当前的 SEI 消息关联的图像)的后面，并且
它的 POC 等于当前图像的 POC 加上<code>recovery_poc_cnt</code>的值，则图像A被认定为<code>recovery point picture</code>。否则，显示顺序中第一个 POC 大于当前
图像 POC 加上 <code>recovery_poc_cnt</code>值的图像被认定为<code>recovery point picture</code>。<code>recovery point</code>图像在解码顺序中不能再当前图像的前面。以显示
顺序来看，从<code>recovery point</code>图像之后的所有解码图像在内容上都是正确或基本正确的。<code>recovery_poc_cnt</code>的值应当在<code>-MaxPicOrderCntLsb / 2</code>和
<code>MaxPicOrderCntLsb / 2 - 1</code>的范围内。</p>
  </li>
  <li>
    <p>exact_match_flag 表示在与恢复点 SEI 消息关联的访问单元处开始的解码过程输出的特定恢复点之后的解码图像，是否应该是一个与 NAL 单元流中
的前一个 IDR 访问单元位置处开始的解码过程生成的图像精确匹配的图像。值为 0 表示不一定精确匹配，为 1 表示精确匹配。</p>
  </li>
</ul>

<p>当解码从恢复点 SEI 消息开始时，所有对不可获得的参考图像的引用应当推断为对只包含用内部宏块预测方式编码的宏块，样点值为 Y 等于 128, Cb 和 Cr 等于
128（中度灰）的图像的引用，目的是确定与<code>exact_match_flag</code>的取值的一致性。</p>

<ul>
  <li>broken_link_flag 表示在恢复点 SEI 消息处 NAL 单元流的链接是否出现中断。它的语义如下：
—— 如果<code>broken_link_flag</code>值为 1， 在前一个 IDR 访问单元位置处开始的解码过程生成的图像可能包含不希望的视觉假象，以致于在输出顺序中关联恢复点 SEI 消息的访问单元之后
的解码图像不可显示，直到指定的输出顺序中的恢复点。<br />
—— 如果<code>broken_link_flag</code>值为 0, 没有预示会出现潜在的视觉假象。</li>
</ul>

<h2 id="hm--recoverypoint">HM 中的 Recovery_Point</h2>

<p>HM 源码中只是对<code>Recovery_Point</code>这一 SEI 信息做了 parse，但并没有使用解析出来的信息，可以认为 HM 中是不支持 <code>recovery_point</code>的。 其中解析的源码如下：</p>

<p><figure class='code'><figcaption><span>recovery_point </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">Void</span> <span class="n">SEIReader</span><span class="o">::</span><span class="n">xParseSEIRecoveryPoint</span><span class="p">(</span><span class="n">SEIRecoveryPoint</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">sei</span><span class="p">,</span> <span class="n">UInt</span> <span class="n">payloadSize</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">ostream</span> <span class="o">*</span><span class="n">pDecodedMessageOutputStream</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">Int</span>  <span class="n">iCode</span><span class="p">;</span>
</span><span class='line'>  <span class="n">UInt</span> <span class="n">uiCode</span><span class="p">;</span>
</span><span class='line'>  <span class="n">output_sei_message_header</span><span class="p">(</span><span class="n">sei</span><span class="p">,</span> <span class="n">pDecodedMessageOutputStream</span><span class="p">,</span> <span class="n">payloadSize</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sei_read_svlc</span><span class="p">(</span> <span class="n">pDecodedMessageOutputStream</span><span class="p">,</span> <span class="n">iCode</span><span class="p">,</span>  <span class="err">“</span><span class="n">recovery_poc_cnt</span><span class="err">”</span> <span class="p">);</span>      <span class="n">sei</span><span class="p">.</span><span class="n">m_recoveryPocCnt</span>     <span class="o">=</span> <span class="n">iCode</span><span class="p">;</span>
</span><span class='line'>  <span class="n">sei_read_flag</span><span class="p">(</span> <span class="n">pDecodedMessageOutputStream</span><span class="p">,</span> <span class="n">uiCode</span><span class="p">,</span> <span class="err">“</span><span class="n">exact_matching_flag</span><span class="err">”</span> <span class="p">);</span>   <span class="n">sei</span><span class="p">.</span><span class="n">m_exactMatchingFlag</span>  <span class="o">=</span> <span class="n">uiCode</span><span class="p">;</span>
</span><span class='line'>  <span class="n">sei_read_flag</span><span class="p">(</span> <span class="n">pDecodedMessageOutputStream</span><span class="p">,</span> <span class="n">uiCode</span><span class="p">,</span> <span class="err">“</span><span class="n">broken_link_flag</span><span class="err">”</span> <span class="p">);</span>      <span class="n">sei</span><span class="p">.</span><span class="n">m_brokenLinkFlag</span>     <span class="o">=</span> <span class="n">uiCode</span><span class="p">;</span>
</span><span class='line'>  <span class="n">xParseByteAlign</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HEVC SPEC学习之PAR、DAR、SAR]]></title>
    <link href="http://lazybing.github.io/blog/2016/11/16/par-sar-dar-analyse/"/>
    <updated>2016-11-16T08:11:53-08:00</updated>
    <id>http://lazybing.github.io/blog/2016/11/16/par-sar-dar-analyse</id>
    <content type="html"><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Aspect_ratio_(image)">Aspect Ratio</a> 是图片的宽高比。<br />
<!--more--></p>

<p>主要有 3 种<code>aspect ratio</code>：PAR(Pixel Aspect Ratio)、DAR(Display Aspect Ratio)、SAR(Sample Aspect Ratio)。</p>

<p>PAR(Pixel Aspect Ratio): 像素纵横比；<br />
DAR(Display Aspect Ratio):显示纵横比；<br />
SAR(Sample Aspect Ratio):采样纵横比；</p>

<p>三者的关系为PAR x SAR = DAR 或者 PAR = DAR / SAR。</p>

<h2 id="sarsample-aspect-ration">SAR(Sample Aspect Ration)采样纵横比</h2>

<p>HEVC SPEC 中关于 SAR 语法元素的描述如下：</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">vui_parameters(){</th>
      <th style="text-align: center">Descriptor</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">aspect_ratio_info_present_flag</td>
      <td style="text-align: center">u(1)</td>
    </tr>
    <tr>
      <td style="text-align: center">if(aspect_ratio_info_present_flag){</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">aspect_ratio_idc</td>
      <td style="text-align: center">u(8)</td>
    </tr>
    <tr>
      <td style="text-align: center">if(aspect_ratio_idc == EXTENDED_SRA){</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">sar_width</td>
      <td style="text-align: center">u(16)</td>
    </tr>
    <tr>
      <td style="text-align: center">sar_height</td>
      <td style="text-align: center">u(16)</td>
    </tr>
    <tr>
      <td style="text-align: center">}</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">}</td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<p>上面提到的 SAR 语法元素的语义如下：</p>

<ul>
  <li>aspect_ratio_info_present_flag 值为 1，指定<code>aspect_ratio_idc</code>在码流中存在；否则该语法元素不存在。</li>
  <li>aspect_ratio_idc 指定亮度采样的<code>SAR</code>的值。下面的表格展示它的含义。当<code>aspect_ratio_idc</code>值为 255，表明<code>EXTENDED_SRA</code>时，<code>SAR</code>的值
等于<code>sar_width:sar_height</code>。当<code>aspect_ratio_idc</code>语法不存在时，该值可以被认为是 0。<code>aspect_ratio_idc</code>的范围是<code>17-254</code>时，未使用，并且不该出现在码流中，此时解码器可以指定为 0。</li>
  <li>sar_width 表示<code>SAR</code>的水平大小。</li>
  <li>sar_height 表示<code>SAR</code>的竖直大小。<br />
<code>sar_width</code>和<code>sar_height</code>等于0、或<code>aspect_ratio_idc</code>等于0时，SPEC 未定义它的行为。</li>
</ul>

<p>PAR 示例如下：</p>

<p><img src="/images/PAR_DAR_SAR/220px-PAR-1to1.svg.png" title="‘1to1_PAR’" ></p>

<p><img src="/images/PAR_DAR_SAR/220px-PAR-2to1.svg.png" title="‘2to1_PAR’" ></p>

<p>DAR 示例如下：</p>

<p><img src="/images/PAR_DAR_SAR/Aspect_ratio_16_9_example3.jpg" title="‘16to9_DAR’" ></p>

<p><img src="/images/PAR_DAR_SAR/Aspect_ratio_4_3_example.jpg" title="‘4to3_DAR’" ></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HEVC SPEC 学习之SEI——Pic_Timing]]></title>
    <link href="http://lazybing.github.io/blog/2015/11/24/hevc-sei-pic-timing/"/>
    <updated>2015-11-24T18:05:50-08:00</updated>
    <id>http://lazybing.github.io/blog/2015/11/24/hevc-sei-pic-timing</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#pic-timing-sei-" id="markdown-toc-pic-timing-sei-">Pic Timing SEI 消息语法</a></li>
  <li><a href="#pic-timing-sei--1" id="markdown-toc-pic-timing-sei--1">Pic Timing SEI 消息语义</a></li>
  <li><a href="#hmpicturetiming" id="markdown-toc-hmpicturetiming">HM中的Picture_Timing</a></li>
</ul>

<p>本文主要记录 HEVC 中的 Picture timing 这一类 SEI PayloadType 的介绍。</p>

<!--more-->

<h2 id="pic-timing-sei-">Pic Timing SEI 消息语法</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">pic_timing(payloadSize){</th>
      <th style="text-align: center">Descriptor</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">if(frame_field_info_present_flag){</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">pic_struct</td>
      <td style="text-align: center">u(4)</td>
    </tr>
    <tr>
      <td style="text-align: center">source_scan_type</td>
      <td style="text-align: center">u(2)</td>
    </tr>
    <tr>
      <td style="text-align: center">duplicate_flag</td>
      <td style="text-align: center">u(1)</td>
    </tr>
    <tr>
      <td style="text-align: center">}</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">…</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">}</td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<h2 id="pic-timing-sei--1">Pic Timing SEI 消息语义</h2>

<ul>
  <li>pic_struct 指明了图像是按照帧图或场图显示；如果是作为帧图显示，当<code>fixed_pic_rate_within_cvs_flag</code>值为 1 时，可以表明帧图像在显示时会重复两次或三次，帧的刷新间隔为固定的<code>DpbOutputElementalInterval[n]</code>。
<code>pic_struct</code>的含义如下图所示。对于未列出的<code>pic_struct</code>值，作为保留值用于将来使用，一般不会出现在码流中，如果出现，解码器可以忽略它的值。</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Value</th>
      <th style="text-align: center">Indicated display of picture</th>
      <th style="text-align: center">Restrictions</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">0</td>
      <td style="text-align: center">(progressive)Frame</td>
      <td style="text-align: center">field_seq_flag 为 0</td>
    </tr>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">Top Field</td>
      <td style="text-align: center">field_seq_flag 为 1</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">Bottom Field</td>
      <td style="text-align: center">field_seq_flag 为 1</td>
    </tr>
    <tr>
      <td style="text-align: center">3</td>
      <td style="text-align: center">Top Field, Bottom Field, in that order</td>
      <td style="text-align: center">field_seq_flag 为 0</td>
    </tr>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">Bottom Field, Top Field, in that order</td>
      <td style="text-align: center">field_seq_flag 为 0</td>
    </tr>
    <tr>
      <td style="text-align: center">5</td>
      <td style="text-align: center">Top Field, Bottom Field, Top Field, in that order</td>
      <td style="text-align: center">field_seq_flag 为 0</td>
    </tr>
    <tr>
      <td style="text-align: center">6</td>
      <td style="text-align: center">Bottom Field, Top Field, Bottom Field, in that order</td>
      <td style="text-align: center">field_seq_flag 为 0</td>
    </tr>
    <tr>
      <td style="text-align: center">7</td>
      <td style="text-align: center">Frame doubling</td>
      <td style="text-align: center">field_seq_flag 为 0, fixed_pic_rate_within_cvs_flag 为 1</td>
    </tr>
    <tr>
      <td style="text-align: center">8</td>
      <td style="text-align: center">Frame tripling</td>
      <td style="text-align: center">field_seq_flag 为 0, fixed_pic_rate_within_cvs_flag 为 1</td>
    </tr>
    <tr>
      <td style="text-align: center">9</td>
      <td style="text-align: center">Top Field paired with previous bottom field in that order</td>
      <td style="text-align: center">field_seq_flag 为 1</td>
    </tr>
    <tr>
      <td style="text-align: center">10</td>
      <td style="text-align: center">Bottom Field paired with previous top field in that order</td>
      <td style="text-align: center">field_seq_flag 为 1</td>
    </tr>
    <tr>
      <td style="text-align: center">11</td>
      <td style="text-align: center">Top Field paired with next bottom field in that order</td>
      <td style="text-align: center">field_seq_flag 为 1</td>
    </tr>
    <tr>
      <td style="text-align: center">12</td>
      <td style="text-align: center">Bottom Field paired with next top field in that order</td>
      <td style="text-align: center">field_seq_flag 为 1</td>
    </tr>
  </tbody>
</table>

<p>如果码流中存在<code>pic_struct</code>,它必须严格遵守下面的条件：
—— 同一个<code>CVS</code>中，所有图像的<code>pic_struct</code>的值等于0、7 或 8。
—— 同一个<code>CVS</code>中，所有图像的<code>pic_struct</code>的值等于1、2、9、10、11 或 12。
—— 同一个<code>CVS</code>中，所有图像的<code>pic_struct</code>的值等于3、4、5、或 6。</p>

<ul>
  <li>source_scan_type 如果其值为 1，表明该图像的扫描类型为<code>progressive</code>；如果其值为 0,表明该图像的扫描类型为<code>interlace</code>;如果其值为 2，表明该图像的扫描类型未定义；如果是其他值，解码器可以将其值设为 2。</li>
</ul>

<p>关于扫描类型的描述，在<code>SPS</code>中的<code>profile_tier_level</code>中也有描述，是通过<code>general_progressive_souce_flag</code>和<code>general_interlaced_source_flag</code>两个语法元素决定的：<br />
1. 如果<code>general_progressive_souce_flag</code>值为0，并且<code>general_interlaced_source_flag</code>值为1，<code>source_scan_type</code>的值如果存在就该为0，如果不存在，解码器也可以将其设置为0。<br />
2. 如果<code>general_progressive_souce_flag</code>值为1，并且<code>general_interlaced_source_flag</code>值为0，<code>source_scan_type</code>的值如果存在就该为1，如果不存在，解码器也可以将其设置为1。<br />
3. 如果<code>general_progressive_souce_flag</code>值为0，并且<code>general_interlaced_source_flag</code>值为0，<code>source_scan_type</code>的值如果存在就该为2，如果不存在，解码器也可以将其设置为2。</p>

<p>针对<code>interlaced</code>码流，解码器必须指定该图像是<code>Top</code>或<code>Bottom</code>，并且说明该码流是<code>Top First</code>或<code>Bottom</code>。具体实现看下面<code>HM</code>中的实现。</p>

<h2 id="hmpicturetiming">HM中的Picture_Timing</h2>

<p>HM 源码中对<code>pic_timing</code>这一 SEI 信息做了比较详细的描述，首先是在 Parse SEI 时获得<code>pic_struct</code>等的信息，之后会根据他的值，对<code>TFF</code>和<code>Field</code>进行赋值，当然HM中对于该值得覆盖也不是很全，只是覆盖到 1 和 2。</p>

<p><figure class='code'><figcaption><span>pic_timing </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">Void</span> <span class="n">SEIReader</span><span class="o">::</span><span class="n">xParseSEIPictureTiming</span><span class="p">(</span><span class="n">SEIPictureTiming</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">sei</span><span class="p">,</span> <span class="n">UInt</span> <span class="n">payloadSize</span><span class="p">,</span> <span class="n">TComSPS</span> <span class="o">*</span><span class="n">sps</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">ostream</span> <span class="o">*</span><span class="n">pDecodedMessageOutputStream</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">…</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span> <span class="n">vui</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">getFrameFieldInfoPresentFlag</span><span class="p">()</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">sei_read_code</span><span class="p">(</span> <span class="n">pDecodedMessageOutputStream</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">code</span><span class="p">,</span> <span class="err">“</span><span class="n">pic_struct</span><span class="err">”</span> <span class="p">);</span>             <span class="n">sei</span><span class="p">.</span><span class="n">m_picStruct</span>            <span class="o">=</span> <span class="n">code</span><span class="p">;</span>
</span><span class='line'>        <span class="n">sei_read_code</span><span class="p">(</span> <span class="n">pDecodedMessageOutputStream</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">code</span><span class="p">,</span> <span class="err">“</span><span class="n">source_scan_type</span><span class="err">”</span> <span class="p">);</span>       <span class="n">sei</span><span class="p">.</span><span class="n">m_sourceScanType</span>       <span class="o">=</span> <span class="n">code</span><span class="p">;</span>
</span><span class='line'>        <span class="n">sei_read_flag</span><span class="p">(</span> <span class="n">pDecodedMessageOutputStream</span><span class="p">,</span>    <span class="n">code</span><span class="p">,</span> <span class="err">“</span><span class="n">duplicate_flag</span><span class="err">”</span> <span class="p">);</span>         <span class="n">sei</span><span class="p">.</span><span class="n">m_duplicateFlag</span>        <span class="o">=</span> <span class="p">(</span><span class="n">code</span> <span class="o">==</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="err">…</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">Bool</span> <span class="n">TDecTop</span><span class="o">::</span><span class="n">xDecodeSlice</span><span class="p">(</span><span class="n">InputNALUnit</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">nal</span><span class="p">,</span> <span class="n">Int</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">iSkipFrame</span><span class="p">,</span> <span class="n">Int</span> <span class="n">iPOCLastDisplay</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="err">…</span>
</span><span class='line'>    <span class="n">Bool</span> <span class="n">isField</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
</span><span class='line'>    <span class="n">Bool</span> <span class="n">isTff</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">m_SEIs</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">// Check if any new Picture Timing SEI has arrived</span>
</span><span class='line'>  <span class="n">SEIMessages</span> <span class="n">pictureTimingSEIs</span> <span class="o">=</span> <span class="n">extractSeisByType</span> <span class="p">(</span><span class="n">m_SEIs</span><span class="p">,</span> <span class="n">SEI</span><span class="o">::</span><span class="n">PICTURE_TIMING</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">pictureTimingSEIs</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">SEIPictureTiming</span><span class="o">*</span> <span class="n">pictureTiming</span> <span class="o">=</span> <span class="p">(</span><span class="n">SEIPictureTiming</span><span class="o">*</span><span class="p">)</span> <span class="o">*</span><span class="p">(</span><span class="n">pictureTimingSEIs</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>
</span><span class='line'>    <span class="n">isField</span> <span class="o">=</span> <span class="p">(</span><span class="n">pictureTiming</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">m_picStruct</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">pictureTiming</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">m_picStruct</span> <span class="o">==</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">isTff</span> <span class="o">=</span>  <span class="p">(</span><span class="n">pictureTiming</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">m_picStruct</span> <span class="o">==</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Set Field/Frame coding mode</span>
</span><span class='line'><span class="n">m_pcPic</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">setField</span><span class="p">(</span><span class="n">isField</span><span class="p">);</span>
</span><span class='line'><span class="n">m_pcPic</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">setTopField</span><span class="p">(</span><span class="n">isTff</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
</code></pre>

]]></content>
  </entry>
  
</feed>
